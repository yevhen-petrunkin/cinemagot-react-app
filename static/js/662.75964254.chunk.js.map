{"version":3,"file":"static/js/662.75964254.chunk.js","mappings":"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","sources":["components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","pages/UserInfo/UserInfo.styled.jsx","components/NewsBox/NewsBox.styled.jsx","components/NewsBox/NewsBox.jsx","components/Widgets/Widgets.styled.jsx","services/widgetFunc.js","components/Widgets/TotalWatchedWidg.jsx","components/Widgets/TotalMoviesWidg.jsx","components/Widgets/TotalRuntimeWidg.jsx","components/Widgets/MeanBudgetWidg.jsx","components/Widgets/MeanPopularityWidg.jsx","components/Widgets/MeanScoreWidg.jsx","components/Widgets/TotalByListWidg.jsx","components/Widgets/FavGenresWidg.jsx","pages/UserInfo/UserInfo.jsx","services/sources/tmdbGenresSource.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GalleryHolder = styled.div`\n  width: 260px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PosterHolder = styled.div`\n  width: 300px;\n  height: 460px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PhotoHolder = styled.div`\n  width: 160px;\n  height: 240px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const HolderImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import {\n  GalleryHolder,\n  PosterHolder,\n  PhotoHolder,\n  HolderImg,\n} from './Placeholder.styled';\nimport placeholder from '../../images/photoholder.jpg';\n\nexport function GalleryPlaceholder() {\n  return (\n    <GalleryHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </GalleryHolder>\n  );\n}\n\nexport function PosterPlaceholder() {\n  return (\n    <PosterHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PosterHolder>\n  );\n}\n\nexport function PhotoPlaceholder() {\n  return (\n    <PhotoHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PhotoHolder>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n  padding: 12px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: repeat(6, 1fr);\n  gap: 12px;\n  height: 87vh;\n  color: ${p => p.theme.colors.default};\n`;\n\nexport const Cell = styled.div`\n  background-color: ${p => p.theme.colors.primary};\n  border-radius: 12px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n\n  &: nth-child(1) {\n    grid-row: 1 / 4;\n  }\n\n  &: nth-child(3) {\n    padding: 8px;\n    grid-column: 3 /4;\n    grid-row: 1 / 7;\n    overflow: hidden;\n  }\n\n  &: nth-child(9) {\n    grid-column: 2 /3;\n    grid-row: 4 / 7;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 100%;\n  height: 84vh;\n  overflow-y: auto;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  margin-bottom: 12px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const Poster = styled.img`\n  width: 260px;\n  height: 400px;\n  border-radius: 8px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n`;\n\nexport const NewsArticle = styled.article`\n  margin-bottom: 8px;\n  padding: 12px;\n  width: 260px;\n  background-color: ${p => p.theme.colors.default};\n  border-radius: ${p => p.theme.radii[2]}px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n  overflow: hidden;\n`;\n\nexport const NewsLink = styled.a`\n  text-decoration: none;\n  color: ${p => p.theme.colors.secondaryDark};\n`;\n\nexport const NewsImg = styled.img`\n  width: 100%;\n`;\n","import {\n  Box,\n  List,\n  Poster,\n  NewsArticle,\n  NewsLink,\n  NewsImg,\n} from './NewsBox.styled';\nimport { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchLatestMovie, fetchNewsData } from 'services/services';\nimport {\n  normalizeMovieData,\n  stringifyData,\n  makeNewsApiQueryFromString,\n  normalizeDateString,\n} from 'services/normalize';\nimport { defaultMovieDataObject } from 'services/sources/defauldValueObjectSource';\nimport { GalleryPlaceholder } from 'components/Placeholder';\n\nfunction NewsBox() {\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n  const [movie, setMovie] = useState(defaultMovieDataObject);\n  const [news, setNews] = useState([]);\n  const [query, setQuery] = useState('film+movie');\n\n  const {\n    data: movieData,\n    isLoading,\n    isError,\n  } = useQuery(['movie'], () => fetchLatestMovie().then(normalizeMovieData));\n\n  const {\n    poster,\n    title,\n    origTitle,\n    slogan,\n    overview,\n    genres,\n    budget,\n    runtime,\n    date,\n  } = movie;\n\n  const genresString = stringifyData(genres);\n\n  const {\n    data: newsData,\n    isLoading: isNewsLoading,\n    isError: isNewsError,\n  } = useQuery(['news', query], () => fetchNewsData(query));\n\n  useEffect(() => {\n    if (movieData && newsData) {\n      setMovie(movieData);\n      setNews(newsData);\n    }\n  }, [movieData, newsData]);\n\n  const queryString = makeNewsApiQueryFromString(title);\n\n  useEffect(() => {\n    setQuery(queryString);\n  }, [queryString]);\n\n  return (\n    <Box>\n      <section>\n        <h2>Latest Movie</h2>\n        <div>\n          {(!isPosterLoaded || isError) && <GalleryPlaceholder />}\n          {poster && (\n            <Poster\n              src={poster}\n              alt={title}\n              onLoad={() => setIsPosterLoaded(true)}\n            />\n          )}\n          {isLoading && <p>Loading Movie...</p>}\n          {isError && <p>Oops... Something went wrong!</p>}\n          {movieData && (\n            <>\n              <h3>{title}</h3>\n              <List>\n                <li>Original title: {origTitle}</li>\n                <li>Slogan: {slogan}</li>\n                <li>Genres: {genresString}</li>\n                <li>Release: {date}</li>\n                <li>Overview: {overview}</li>\n                <li>Budget: {budget}</li>\n                <li>Runtime: {runtime}</li>\n              </List>\n            </>\n          )}\n        </div>\n      </section>\n      <section>\n        <h2>Latest News</h2>\n        <div>\n          {isNewsLoading && <p>Loading News...</p>}\n          {isNewsError && <p>Oops... Something went wrong!</p>}\n          {news.map(\n            ({ author, title, content, publishedAt, url, urlToImage }) => {\n              const date = normalizeDateString(publishedAt);\n              return (\n                <NewsArticle key={url}>\n                  <NewsLink href={url}>\n                    <h2>{title}</h2>\n                    <NewsImg src={urlToImage} alt=\"title\" />\n                    <p>{content}</p>\n                    <p>\n                      <span>{author}</span>\n                      <span>{date}</span>\n                    </p>\n                  </NewsLink>\n                </NewsArticle>\n              );\n            }\n          )}\n        </div>\n      </section>\n    </Box>\n  );\n}\n\nexport default NewsBox;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  height: 100%;\n`;\n\nexport const ChartBox = styled.div`\n  max-width: 300px;\n  max-height: 300px;\n`;\n\nexport const Caption = styled.h2`\n  margin: 0;\n  font-size: 20px;\n`;\n\nexport const Info = styled.p`\n  margin: 0;\n  font-size: 32px;\n`;\n","import { tmdbGenreColors } from './sources/tmdbGenresSource';\nimport { userListBtnSetSource } from './sources/btnSetSource';\n\nexport function countTotalMoviesInOneList(obj, list) {\n  if (!obj) {\n    return 0;\n  }\n\n  return obj[list].length;\n}\n\nexport function countAllMoviesInUserLists(obj) {\n  if (!obj) {\n    return 0;\n  }\n  const favTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[0].listId\n  );\n  const watchTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[1].listId\n  );\n  const seenTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[2].listId\n  );\n\n  return favTotal + watchTotal + seenTotal;\n}\n\nexport function countMoviesByUserList(obj) {\n  if (!obj) {\n    return [];\n  }\n  const favTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[0].listId\n  );\n  const watchTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[1].listId\n  );\n  const seenTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[2].listId\n  );\n\n  return userListBtnSetSource.map((item, index) => {\n    return {\n      list: item.caption,\n      total: index === 0 ? favTotal : index === 1 ? watchTotal : seenTotal,\n    };\n  });\n}\n\nexport function countTotalRuntime(obj) {\n  if (!obj) {\n    return 0;\n  }\n  const timeInHours =\n    obj.seenList.reduce((acc, { runtime }) => (acc += Number(runtime)), 0) / 60;\n\n  return timeInHours.toFixed(2);\n}\n\nexport function countMeanBudget(obj) {\n  if (!obj) {\n    return 0;\n  }\n  const favTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[0].listId\n  );\n  const meanBudget =\n    obj.favList.reduce((acc, { budget }) => (acc += Number(budget)), 0) /\n    favTotal;\n\n  return meanBudget.toFixed(0);\n}\n\nexport function countMeanPopularity(obj) {\n  if (!obj) {\n    return 0;\n  }\n  const favTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[0].listId\n  );\n  const meanPop =\n    obj.favList.reduce(\n      (acc, { popularity }) => (acc += Number(popularity)),\n      0\n    ) / favTotal;\n\n  return meanPop.toFixed(2);\n}\n\nexport function countMeanScore(obj) {\n  if (!obj) {\n    return 0;\n  }\n  const favTotal = countTotalMoviesInOneList(\n    obj,\n    userListBtnSetSource[0].listId\n  );\n  const meanScore =\n    obj.favList.reduce((acc, { score }) => (acc += Number(score)), 0) /\n    favTotal;\n\n  return meanScore.toFixed(2);\n}\n\nexport function countFavoriteGenres(obj) {\n  const genreArr = getGenreArray(obj);\n  const uniqueGenres = getUniqueGenres(genreArr);\n  const countedGenres = countGenres(genreArr, uniqueGenres);\n  const favoriteGenres = getFavoriteGenres(countedGenres);\n  return favoriteGenres;\n}\n\nfunction getGenreArray(data) {\n  if (!data) {\n    return [];\n  }\n  return data.favList.flatMap(({ genres }) =>\n    genres.map(genre => genre.name.toLowerCase())\n  );\n}\n\nfunction getUniqueGenres(array) {\n  return array.filter((genre, ind, arr) => arr.indexOf(genre) === ind);\n}\n\nfunction countGenres(array1, array2) {\n  return array2.map(item => {\n    const number = array1.reduce((acc, genre) => {\n      if (item === genre) {\n        return (acc += 1);\n      }\n      return acc;\n    }, 0);\n    return { genre: item, number };\n  });\n}\n\nfunction getFavoriteGenres(array) {\n  return array\n    .map(movie => {\n      const matchingGenre = tmdbGenreColors.find(\n        item => movie.genre === item.genre.toLowerCase()\n      );\n      return {\n        ...movie,\n        genre: matchingGenre.genre,\n        color: matchingGenre.color,\n      };\n    })\n    .sort((a, b) => b.number - a.number);\n}\n","import { Box, Caption, Info } from './Widgets.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countTotalMoviesInOneList } from 'services/widgetFunc';\n\nexport function TotalWatchedWidg() {\n  const listData = useSelector(selectUserListObj);\n  const totalWatched = countTotalMoviesInOneList(listData, 'seenList');\n\n  return (\n    <Box>\n      <Caption>Total Movies Watched</Caption>\n      <Info>{totalWatched}</Info>\n    </Box>\n  );\n}\n","import { Box, Caption, Info } from './Widgets.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countAllMoviesInUserLists } from 'services/widgetFunc';\n\nexport function TotalMoviesWidg() {\n  const listData = useSelector(selectUserListObj);\n  const moviesTotal = countAllMoviesInUserLists(listData);\n\n  return (\n    <Box>\n      <Caption>Total Movies</Caption>\n      <Info>{moviesTotal}</Info>\n    </Box>\n  );\n}\n","import { Box, Caption, Info } from './Widgets.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countTotalRuntime } from 'services/widgetFunc';\n\nexport function TotalRuntimeWidg() {\n  const listData = useSelector(selectUserListObj);\n  const totalRuntime = countTotalRuntime(listData);\n\n  return (\n    <Box>\n      <Caption>Time Spent Watching</Caption>\n      <Info>{totalRuntime} hrs</Info>\n    </Box>\n  );\n}\n","import { Box, Caption, Info } from './Widgets.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countMeanBudget } from 'services/widgetFunc';\n\nexport function MeanBudgetWidg() {\n  const listData = useSelector(selectUserListObj);\n  const meanBudget = countMeanBudget(listData);\n\n  return (\n    <Box>\n      <Caption>Average Favorites Budget</Caption>\n      <Info>{meanBudget} USD</Info>\n    </Box>\n  );\n}\n","import { Box, Caption, Info } from './Widgets.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countMeanPopularity } from 'services/widgetFunc';\n\nexport function MeanPopularityWidg() {\n  const listData = useSelector(selectUserListObj);\n  const meanPop = countMeanPopularity(listData);\n\n  return (\n    <Box>\n      <Caption>Average Favorites Popularity</Caption>\n      <Info>{meanPop}</Info>\n    </Box>\n  );\n}\n","import { Box, Caption, Info } from './Widgets.styled';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countMeanScore } from 'services/widgetFunc';\n\nexport function MeanScoreWidg() {\n  const listData = useSelector(selectUserListObj);\n  const meanScore = countMeanScore(listData);\n\n  return (\n    <Box>\n      <Caption>Average Favorites Score</Caption>\n      <Info>{meanScore} out of 10.00</Info>\n    </Box>\n  );\n}\n","import { Box, Caption, ChartBox } from './Widgets.styled';\nimport { Chart, registerables } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countMoviesByUserList } from 'services/widgetFunc';\nimport { mainTheme } from 'services';\n\nChart.register(...registerables);\nChart.defaults.color = mainTheme.colors.default;\n\nexport function TotalByListWidg() {\n  const listData = useSelector(selectUserListObj);\n  const preparedData = countMoviesByUserList(listData);\n\n  const lists = preparedData.map(list => list.list);\n  const numbers = preparedData.map(list => list.total);\n  const { accentLight, success, secondaryLight } = mainTheme.colors;\n  const colors = [accentLight, secondaryLight, success];\n\n  const options = {\n    maintainAspectRatio: false,\n    scales: {\n      y: {\n        beginAtZero: true,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  const data = {\n    labels: lists,\n    datasets: [\n      {\n        data: numbers,\n        backgroundColor: colors,\n        borderColor: ['transparent'],\n        minBarLength: 2,\n        borderRadius: 4,\n      },\n    ],\n  };\n\n  return (\n    <Box>\n      <Caption>My Lists</Caption>\n      {preparedData.length > 0 && (\n        <ChartBox>\n          <Bar redraw={true} options={options} data={data} />\n        </ChartBox>\n      )}\n    </Box>\n  );\n}\n","import { Box, Caption, ChartBox } from './Widgets.styled';\nimport { Chart, registerables } from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectUserListObj } from 'redux/selectors';\nimport { countFavoriteGenres } from 'services/widgetFunc';\nimport { mainTheme } from 'services';\n\nChart.register(...registerables);\nChart.defaults.color = mainTheme.colors.default;\n\nexport function FavGenresWidg() {\n  const listData = useSelector(selectUserListObj);\n  const preparedData = countFavoriteGenres(listData);\n\n  const genres = preparedData.map(genre => genre.genre);\n  const numbers = preparedData.map(genre => genre.number);\n  const colors = preparedData.map(genre => genre.color);\n\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n      },\n    },\n  };\n\n  const data = {\n    labels: genres,\n    datasets: [\n      {\n        data: numbers,\n        backgroundColor: colors,\n        borderColor: ['transparent'],\n      },\n    ],\n  };\n\n  return (\n    <Box>\n      <Caption>Favorite Genres</Caption>\n      {preparedData.length > 0 && (\n        <ChartBox>\n          <Pie redraw={true} options={options} data={data} />\n        </ChartBox>\n      )}\n    </Box>\n  );\n}\n","import { Grid, Cell } from './UserInfo.styled';\nimport NewsBox from 'components/NewsBox';\nimport {\n  TotalMoviesWidg,\n  TotalWatchedWidg,\n  TotalRuntimeWidg,\n  MeanBudgetWidg,\n  MeanPopularityWidg,\n  MeanScoreWidg,\n  TotalByListWidg,\n  FavGenresWidg,\n} from 'components/Widgets';\n\nfunction UserInfo() {\n  return (\n    <section>\n      <Grid>\n        <Cell>\n          <TotalByListWidg />\n        </Cell>\n        <Cell>\n          <TotalMoviesWidg />\n        </Cell>\n        <Cell>\n          <NewsBox />\n        </Cell>\n        <Cell>\n          <TotalWatchedWidg />\n        </Cell>\n        <Cell>\n          <TotalRuntimeWidg />\n        </Cell>\n        <Cell>\n          <MeanBudgetWidg />\n        </Cell>\n        <Cell>\n          <MeanPopularityWidg />\n        </Cell>\n        <Cell>\n          <MeanScoreWidg />\n        </Cell>\n        <Cell>\n          <FavGenresWidg />\n        </Cell>\n      </Grid>\n    </section>\n  );\n}\n\nexport default UserInfo;\n","export const tmdbGenres = [\n  { value: 28, label: 'Action' },\n  { value: 12, label: 'Adventure' },\n  { value: 16, label: 'Animation' },\n  { value: 35, label: 'Comedy' },\n  { value: 80, label: 'Crime' },\n  { value: 99, label: 'Documentary' },\n  { value: 18, label: 'Drama' },\n  { value: 10751, label: 'Family' },\n  { value: 14, label: 'Fantasy' },\n  { value: 36, label: 'History' },\n  { value: 27, label: 'Horror' },\n  { value: 10402, label: 'Music' },\n  { value: 9648, label: 'Mystery' },\n  { value: 10749, label: 'Romance' },\n  { value: 878, label: 'Science Fiction' },\n  { value: 10770, label: 'TV Movie' },\n  { value: 53, label: 'Thriller' },\n  { value: 10752, label: 'War' },\n  { value: 37, label: 'Western' },\n];\n\nexport const tmdbGenreColors = [\n  { color: '#f9f871', genre: 'Action' },\n  { color: '#ffBe4d', genre: 'Adventure' },\n  { color: '#ff8051', genre: 'Animation' },\n  { color: '#f44169', genre: 'Comedy' },\n  { color: '#00c6b3', genre: 'Crime' },\n  { color: '#0096e2', genre: 'Documentary' },\n  { color: '#0053ca', genre: 'Drama' },\n  { color: '#ffe8ff', genre: 'Family' },\n  { color: '#c2fcf3', genre: 'Fantasy' },\n  { color: '#8a6b9a', genre: 'History' },\n  { color: '#d24717', genre: 'Horror' },\n  { color: '#930100', genre: 'Music' },\n  { color: '#e8d5b5', genre: 'Mystery' },\n  { color: '#8bafce', genre: 'Romance' },\n  { color: '#fffade', genre: 'Science Fiction' },\n  { color: '#8bafce', genre: 'TV Movie' },\n  { color: '#ffaaff', genre: 'Thriller' },\n  { color: '#6e5e00', genre: 'War' },\n  { color: '#954f00', genre: 'Western' },\n];\n"],"names":["GalleryHolder","styled","PosterHolder","PhotoHolder","HolderImg","GalleryPlaceholder","src","placeholder","alt","PosterPlaceholder","PhotoPlaceholder","Grid","p","theme","colors","default","Cell","primary","shadows","ordinary","Box","List","Poster","NewsArticle","radii","NewsLink","secondaryDark","NewsImg","useState","isPosterLoaded","setIsPosterLoaded","defaultMovieDataObject","movie","setMovie","news","setNews","query","setQuery","useQuery","fetchLatestMovie","then","normalizeMovieData","movieData","data","isLoading","isError","poster","title","origTitle","slogan","overview","genres","budget","runtime","date","genresString","stringifyData","fetchNewsData","newsData","isNewsLoading","isNewsError","useEffect","queryString","makeNewsApiQueryFromString","onLoad","map","author","content","publishedAt","url","urlToImage","normalizeDateString","href","ChartBox","Caption","Info","countTotalMoviesInOneList","obj","list","length","countFavoriteGenres","array1","genreArr","favList","flatMap","genre","name","toLowerCase","getGenreArray","uniqueGenres","filter","ind","arr","indexOf","favoriteGenres","array","matchingGenre","tmdbGenreColors","item","color","sort","a","b","number","getFavoriteGenres","reduce","acc","TotalWatchedWidg","totalWatched","useSelector","selectUserListObj","TotalMoviesWidg","listData","moviesTotal","userListBtnSetSource","TotalRuntimeWidg","totalRuntime","seenList","Number","toFixed","MeanBudgetWidg","meanBudget","favTotal","countMeanBudget","MeanPopularityWidg","meanPop","popularity","countMeanPopularity","MeanScoreWidg","meanScore","score","countMeanScore","TotalByListWidg","preparedData","watchTotal","seenTotal","index","caption","total","countMoviesByUserList","lists","numbers","mainTheme","accentLight","success","labels","datasets","backgroundColor","secondaryLight","borderColor","minBarLength","borderRadius","redraw","options","maintainAspectRatio","scales","y","beginAtZero","plugins","legend","display","FavGenresWidg","Chart","registerables","tmdbGenres","value","label"],"sourceRoot":""}