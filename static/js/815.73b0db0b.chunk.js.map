{"version":3,"file":"static/js/815.73b0db0b.chunk.js","mappings":"qNAEO,SAASA,IACd,OACE,SAACC,EAAA,EAAD,CACEC,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,aAAc,QAJlB,UAOE,SAACJ,EAAA,QAAD,KAGL,CAEM,SAASK,IACd,OACE,SAACL,EAAA,EAAD,CACEC,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,aAAc,QAJlB,UAOE,SAACJ,EAAA,QAAD,KAGL,C,qLCzBYM,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wWAoBTE,EAASF,EAAAA,GAAAA,IAAH,qHAONG,EAAeH,EAAAA,GAAAA,GAAH,oEAKZI,EAAkBJ,EAAAA,GAAAA,GAAH,oEAKfK,EAAgBL,EAAAA,GAAAA,GAAH,oEAKbM,EAAeN,EAAAA,GAAAA,GAAH,oEAKZO,EAAcP,EAAAA,GAAAA,EAAH,oEAKXQ,EAAOR,EAAAA,GAAAA,GAAH,kGAOJS,EAAWT,EAAAA,GAAAA,GAAH,gDAIRU,GAAYV,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4C,6BCmCtB,MAhFA,WAAyB,IAAD,IACtB,GAA4CW,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,GAIIC,EAAAA,EAAAA,GAAS,CAAC,QAASN,IAAU,kBAC/BO,EAAAA,EAAAA,IAAeP,GAASQ,MACtB,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,SAAUC,EAA7C,EAA6CA,OAA7C,MAA2D,CACzDC,QAAQC,EAAAA,EAAAA,IAAkBN,GAC1BC,MAAAA,EACAM,MAAOL,EACPC,SAAAA,EACAC,QAAQI,EAAAA,EAAAA,IAAcJ,GALxB,GAF6B,IAHzBK,EADR,EACEC,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,QAaF,GAAID,EACF,OAAO,SAACE,EAAA,EAAD,IAGT,IAAQR,EAA2CI,EAA3CJ,OAAQJ,EAAmCQ,EAAnCR,MAAOM,EAA4BE,EAA5BF,MAAOJ,EAAqBM,EAArBN,SAAUC,EAAWK,EAAXL,OAExC,OACE,iCACE,gCACE,UAAC5B,EAAD,CAAWsC,GAAIrB,EAAf,WACE,SAAC,MAAD,KACA,0CAEF,6BACKJ,GAAkBuB,KAAY,SAAC,IAAD,IAChCP,IACC,SAAC1B,EAAD,CACEoC,IAAKV,EACLW,IAAKf,EACLgB,OAAQ,kBAAM3B,GAAkB,EAAxB,QAId,iBAAKnB,MAAO,CAAE+C,QAAS,UAAvB,WACE,SAACtC,EAAD,WAAgBgC,GAAWX,KAC3B,UAACjB,EAAD,2BAA2B4B,GAAWL,MACtC,SAAC1B,EAAD,wBACA,SAACG,EAAD,WAAe4B,GAAWT,KAC1B,SAACrB,EAAD,sBACA,SAACE,EAAD,WAAe4B,GAAWR,WAG9B,gCACE,SAACrB,EAAD,sCACA,0BACE,UAACE,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAW2B,GAAG,OAAOnB,MAAO,CAAEC,KAAMH,GAApC,qBAIF,SAACP,EAAD,WACE,SAACC,EAAD,CAAW2B,GAAG,SAASnB,MAAO,CAAEC,KAAMH,GAAtC,6BAMN,SAAC,EAAA0B,SAAD,CAAUC,UAAU,SAACP,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C","sources":["components/Placeholder/Placeholder.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Placeholder } from 'semantic-ui-react';\n\nexport function PosterPlaceholder() {\n  return (\n    <Placeholder\n      style={{\n        height: 300,\n        width: 200,\n        borderRadius: '10px',\n      }}\n    >\n      <Placeholder.Image />\n    </Placeholder>\n  );\n}\n\nexport function PhotoPlaceholder() {\n  return (\n    <Placeholder\n      style={{\n        height: 240,\n        width: 160,\n        borderRadius: '10px',\n      }}\n    >\n      <Placeholder.Image />\n    </Placeholder>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackBtn = styled(Link)`\n  margin-bottom: 10px;\n  padding: 5px 12px;\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 16px;\n  background-color: #cce2ff;\n  border-color: #cce2ff;\n  border-radius: 6px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #4183c4;\n    border-color: #4183c4;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 200px;\n  height: 300px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n`;\n\nexport const MovieCaption = styled.h1`\n  margin-bottom: 10px;\n  font-size: 28px;\n`;\n\nexport const OverviewCaption = styled.h2`\n  margin-bottom: 10px;\n  font-size: 26px;\n`;\n\nexport const GenresCaption = styled.h3`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const AdditCaption = styled.h4`\n  margin-bottom: 10px;\n  font-size: 22px;\n`;\n\nexport const TextContent = styled.p`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 5px 0;\n  font-size: 22px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const AdditLink = styled(Link)`\n  padding: 10px 0;\n`;\n","import { useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { fetchMovieById, getPictureAddress } from 'services';\nimport { stringifyData } from 'services';\nimport {\n  GoBackBtn,\n  Poster,\n  MovieCaption,\n  TextContent,\n  OverviewCaption,\n  GenresCaption,\n  AdditCaption,\n  List,\n  ListItem,\n  AdditLink,\n} from './MovieDetails.styled';\nimport { PosterPlaceholder } from 'components/Placeholder';\nimport LoaderComp from 'components/Loader';\n\nfunction MovieDetails() {\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const {\n    data: movieData,\n    isLoading,\n    isError,\n  } = useQuery(['movie', movieId], () =>\n    fetchMovieById(movieId).then(\n      ({ poster_path, title, popularity, overview, genres }) => ({\n        poster: getPictureAddress(poster_path),\n        title,\n        score: popularity,\n        overview,\n        genres: stringifyData(genres),\n      })\n    )\n  );\n\n  if (isLoading) {\n    return <LoaderComp />;\n  }\n\n  const { poster, title, score, overview, genres } = movieData;\n\n  return (\n    <>\n      <section>\n        <GoBackBtn to={backLinkHref}>\n          <HiArrowNarrowLeft />\n          <span>Go Back</span>\n        </GoBackBtn>\n        <div>\n          {(!isPosterLoaded || isError) && <PosterPlaceholder />}\n          {poster && (\n            <Poster\n              src={poster}\n              alt={title}\n              onLoad={() => setIsPosterLoaded(true)}\n            />\n          )}\n        </div>\n        <div style={{ padding: '20px 0' }}>\n          <MovieCaption>{!isError && title}</MovieCaption>\n          <TextContent>User Score: {!isError && score}</TextContent>\n          <OverviewCaption>Overview</OverviewCaption>\n          <TextContent>{!isError && overview}</TextContent>\n          <GenresCaption>Genres</GenresCaption>\n          <TextContent>{!isError && genres}</TextContent>\n        </div>\n      </section>\n      <section>\n        <AdditCaption>Additional Information</AdditCaption>\n        <nav>\n          <List>\n            <ListItem>\n              <AdditLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </AdditLink>\n            </ListItem>\n            <ListItem>\n              <AdditLink to=\"review\" state={{ from: backLinkHref }}>\n                Reviews\n              </AdditLink>\n            </ListItem>\n          </List>\n        </nav>\n        <Suspense fallback={<LoaderComp />}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["PosterPlaceholder","Placeholder","style","height","width","borderRadius","PhotoPlaceholder","GoBackBtn","styled","Link","Poster","MovieCaption","OverviewCaption","GenresCaption","AdditCaption","TextContent","List","ListItem","AdditLink","useState","isPosterLoaded","setIsPosterLoaded","movieId","useParams","backLinkHref","useLocation","state","from","useQuery","fetchMovieById","then","poster_path","title","popularity","overview","genres","poster","getPictureAddress","score","stringifyData","movieData","data","isLoading","isError","Loader","to","src","alt","onLoad","padding","Suspense","fallback"],"sourceRoot":""}