{"version":3,"file":"static/js/213.7d43812c.chunk.js","mappings":"4QAEaA,EAAcC,EAAAA,GAAAA,GAAH,4CCAXC,EAAOD,EAAAA,GAAAA,GAAH,0E,UCCJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+G,SCwBvB,MAxBA,YAA6C,IAA5BI,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,SAC1BC,EAAU,GAGd,OAFaD,EAASE,MAAMC,MAG1B,IAAK,OACHF,EAAO,kBAAcH,GACrB,MACF,IAAK,SACHG,EAAO,UAAMH,GACb,MACF,QACE,OAGJ,OACE,yBACE,SAACF,EAAD,CAAYQ,GAAIH,EAASC,MAAO,CAAEG,KAAML,GAAxC,SACGD,KAIR,ECRD,MAbA,YAAwC,IAArBO,EAAoB,EAApBA,OAAQN,EAAY,EAAZA,SACzB,OACE,SAACL,EAAD,UACGW,EAAOC,KAAI,SAAAC,GACV,IAAQV,EAAkBU,EAAlBV,GAAIC,EAAcS,EAAdT,UACZ,OACE,SAAC,EAAD,CAAgBD,GAAIA,EAAIC,UAAWA,EAAWC,SAAUA,GAA5CF,EAEf,KAGN,ECYD,MAnBA,WACE,OAA4CW,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMX,GAAWY,EAAAA,EAAAA,MASjB,OARAZ,EAASE,MAAQ,CAAEC,KAAM,SAEzBU,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GACvBL,GAAkBM,EAAAA,EAAAA,IAAgBD,EAAKE,SACxC,GACF,GAAE,KAGD,gCACE,SAACzB,EAAD,8BACA,SAAC,EAAD,CAASa,OAAQI,EAAgBV,SAAUA,MAGhD,EAIDmB,EAAAA,UAAoB,CAClBb,OAAQc,IAAAA,QACNA,IAAAA,MAAgB,CACdtB,GAAIsB,IAAAA,OAAAA,WACJrB,UAAWqB,IAAAA,OAAAA,cAEbC,WACFrB,SAAUoB,IAAAA,MAAgB,CACxBlB,MAAOkB,IAAAA,MAAgB,CACrBjB,KAAMiB,IAAAA,OAAAA,aACLC,aACFA,W,kWC/BL,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAehC,EAAUiC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQF,CAED,SAASG,IACP,OAAOT,CACR,CAHDA,EAAKR,WAAaQ,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAenB,UAAYmB,EAEpBA,CACR,C,uBC/CCZ,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["pages/Home/Home.styled.jsx","components/Gallery/Gallery.styled.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Gallery/Gallery.jsx","pages/Home/Home.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeCaption = styled.h1`\n  font-size: 26px;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 0;\n  display: inline-block;\n  font-size: 18px;\n  line-height: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './Movie.styled';\n\nfunction Movie({ id, movieName, location }) {\n  let movieId = '';\n  const page = location.state.page;\n\n  switch (page) {\n    case 'home':\n      movieId = `/movies/${id}`;\n      break;\n    case 'movies':\n      movieId = `${id}`;\n      break;\n    default:\n      return;\n  }\n\n  return (\n    <li>\n      <StyledLink to={movieId} state={{ from: location }}>\n        {movieName}\n      </StyledLink>\n    </li>\n  );\n}\n\nexport default Movie;\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  movieName: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      page: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { List } from './Gallery.styled';\nimport Movie from 'components/Movie';\n\nfunction Gallery({ movies, location }) {\n  return (\n    <List>\n      {movies.map(movie => {\n        const { id, movieName } = movie;\n        return (\n          <Movie key={id} id={id} movieName={movieName} location={location} />\n        );\n      })}\n    </List>\n  );\n}\n\nexport default Gallery;\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      movieName: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      page: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getTrendingMovies } from 'services';\nimport { normalizeMovies } from 'services';\nimport { HomeCaption } from './Home.styled';\nimport Gallery from 'components/Gallery';\n\nfunction Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n  location.state = { page: 'home' };\n\n  useEffect(() => {\n    getTrendingMovies().then(data => {\n      setTrendingMovies(normalizeMovies(data.results));\n    });\n  }, []);\n\n  return (\n    <section>\n      <HomeCaption>Trending Today</HomeCaption>\n      <Gallery movies={trendingMovies} location={location} />\n    </section>\n  );\n}\n\nexport default Home;\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      movieName: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      page: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["HomeCaption","styled","List","StyledLink","Link","id","movieName","location","movieId","state","page","to","from","movies","map","movie","useState","trendingMovies","setTrendingMovies","useLocation","useEffect","getTrendingMovies","then","data","normalizeMovies","results","Gallery","PropTypes","isRequired","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}