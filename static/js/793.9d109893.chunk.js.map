{"version":3,"file":"static/js/793.9d109893.chunk.js","mappings":"8JAMA,IAJA,YAAkC,IAAbA,EAAY,EAAZA,SACnB,OAAO,SAAC,KAAD,UAAUA,GAClB,C,qICFYC,EAAUC,EAAAA,GAAAA,IAAH,2nBAGH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IA2BPC,EAAcJ,EAAAA,GAAAA,IAAH,yhBA6BXK,EAAcL,EAAAA,GAAAA,IAAH,qyBAER,SAAAC,GAAC,OAAuB,GAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAcC,SAAAF,GAAC,OAAuB,GAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAMD,SAAAF,GAAC,OAAuB,GAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAMD,SAAAF,GAAC,OAAuB,GAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAMD,SAAAF,GAAC,OAAuB,GAAnBA,EAAEC,MAAMC,MAAM,EAAlB,G,2IChGZ,SAASG,EAAT,GAAsC,IAAbR,EAAY,EAAZA,SAC9B,OAAO,SAAC,KAAD,UAAcA,GACtB,CCFM,SAASS,EAAT,GAAsC,IAAbT,EAAY,EAAZA,SAC9B,OAAO,SAAC,KAAD,UAAcA,GACtB,C,mGCFYU,EAAUR,EAAAA,GAAAA,IAAH,kIAQPS,EAAcT,EAAAA,GAAAA,QAAH,uJAGF,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,OAAnB,IACJ,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,MAAM,EAAlB,IACJ,SAAAX,GAAC,OAAIA,EAAEC,MAAMW,QAAQC,QAApB,IAIJC,EAAWf,EAAAA,GAAAA,EAAH,iEAEV,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,OAAOM,aAAnB,I,GAGWhB,EAAAA,GAAAA,IAAH,wC,6BCpBPiB,GAAqBC,EAAAA,EAAAA,IAFP,CAAC,OAAQ,WAAY,SAAU,QAAS,U,mBCiDnE,MA5CA,WACE,OAIIC,EAAAA,EAAAA,GAAS,CAAC,SAAS,kBAAMC,EAAAA,EAAAA,IAAcH,EAApB,IAHfI,EADR,EACEC,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,QAGF,OAAID,GACK,wCAGLC,GACK,4DAIP,8BACE,UAACC,EAAA,GAAD,YACE,gDACA,SAACjB,EAAD,UACGa,EAAKK,KACJ,YAA+D,IAA5DC,EAA2D,EAA3DA,OAAQC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WACrCC,GAAOC,EAAAA,EAAAA,IAAoBJ,GACjC,OACE,SAACrB,EAAD,WACE,UAACM,EAAD,CAAUoB,KAAMJ,EAAhB,WACE,wBAAKH,KACL,gBAAKQ,IAAKJ,EAAYK,IAAI,QAAQC,MAAM,UACxC,uBAAIT,KACJ,0BACE,0BAAOF,KACP,0BAAOM,WAPKF,EAYrB,UAMZ,C","sources":["components/Container/Container.jsx","components/Container/Container.styled.jsx","components/Container/FreeContainer.jsx","components/Container/HeroContainer.jsx","pages/News/News.styled.jsx","services/sources/newsApiSearchSource.jsx","pages/News/News.jsx"],"sourcesContent":["import { Wrapper } from './Container.styled';\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n\n  @media only screen and (min-width: 1440px) {\n    max-width: 1440px;\n  }\n\n  @media only screen and (max-width: 1439px) {\n    max-width: 1365px;\n  }\n\n  @media only screen and (max-width: 1199px) {\n    max-width: 992px;\n  }\n\n  @media only screen and (max-width: 991px) {\n    max-width: 960px;\n  }\n\n  @media only screen and (max-width: 767px) {\n    max-width: 720px;\n  }\n\n  @media only screen and (max-width: 479px) {\n    max-width: 425px;\n  }\n`;\n\nexport const FreeWrapper = styled.div`\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  @media only screen and (min-width: 1440px) {\n    max-width: 1440px;\n  }\n\n  @media only screen and (max-width: 1439px) {\n    max-width: 1365px;\n  }\n\n  @media only screen and (max-width: 1199px) {\n    max-width: 992px;\n  }\n\n  @media only screen and (max-width: 991px) {\n    max-width: 960px;\n  }\n\n  @media only screen and (max-width: 767px) {\n    max-width: 720px;\n  }\n\n  @media only screen and (max-width: 479px) {\n    max-width: 425px;\n  }\n`;\n\nexport const HeroWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: ${p => p.theme.space[1] * 30}px;\n  box-sizing: border-box;\n\n  @media only screen and (min-width: 1440px) {\n    max-width: 1440px;\n    max-height: 960px;\n  }\n\n  @media only screen and (max-width: 1439px) {\n    max-width: 1365px;\n    max-height: 910px;\n  }\n\n  @media only screen and (max-width: 1199px) {\n    margin-top: ${p => p.theme.space[1] * 28}px;\n    max-width: 992px;\n    max-height: 661.33px;\n  }\n\n  @media only screen and (max-width: 991px) {\n    margin-top: ${p => p.theme.space[1] * 28}px;\n    max-width: 960px;\n    max-height: 640px;\n  }\n\n  @media only screen and (max-width: 767px) {\n    margin-top: ${p => p.theme.space[1] * 18}px;\n    max-width: 720px;\n    max-height: 480px;\n  }\n\n  @media only screen and (max-width: 479px) {\n    margin-top: ${p => p.theme.space[1] * 16}px;\n    max-width: 425px;\n    max-height: 283.33px;\n  }\n`;\n","import { FreeWrapper } from './Container.styled';\n\nexport function FreeContainer({ children }) {\n  return <FreeWrapper>{children}</FreeWrapper>;\n}\n","import { HeroWrapper } from './Container.styled';\n\nexport function HeroContainer({ children }) {\n  return <HeroWrapper>{children}</HeroWrapper>;\n}\n","import styled from 'styled-components';\n\nexport const NewsBox = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const NewsArticle = styled.article`\n  padding: 12px;\n  width: 340px;\n  background-color: ${p => p.theme.colors.default};\n  border-radius: ${p => p.theme.radii[2]}px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n  overflow: hidden;\n`;\n\nexport const NewsLink = styled.a`\n  text-decoration: none;\n  color: ${p => p.theme.colors.secondaryDark};\n`;\n\nexport const NewsImg = styled.img`\n  width: 100%;\n`;\n","import { stringifyNewsApiQuery } from 'services/normalize';\n\nconst newsApiSearchArray = ['film', 'director', 'cinema', 'actor', 'movie'];\n\nexport const newsApiQueryString = stringifyNewsApiQuery(newsApiSearchArray);\n","import { NewsBox, NewsArticle, NewsLink } from './News.styled';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchNewsData } from 'services/services';\nimport { normalizeDateString } from 'services/normalize';\nimport { newsApiQueryString } from 'services/sources/newsApiSearchSource';\nimport Container from 'components/Container';\n\nfunction News() {\n  const {\n    data: news,\n    isLoading,\n    isError,\n  } = useQuery(['news'], () => fetchNewsData(newsApiQueryString));\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Oops... Something went wrong!</div>;\n  }\n\n  return (\n    <section>\n      <Container>\n        <h1>Film Industry News</h1>\n        <NewsBox>\n          {news.map(\n            ({ author, title, content, publishedAt, url, urlToImage }) => {\n              const date = normalizeDateString(publishedAt);\n              return (\n                <NewsArticle key={url}>\n                  <NewsLink href={url}>\n                    <h2>{title}</h2>\n                    <img src={urlToImage} alt=\"title\" width=\"100%\" />\n                    <p>{content}</p>\n                    <p>\n                      <span>{author}</span>\n                      <span>{date}</span>\n                    </p>\n                  </NewsLink>\n                </NewsArticle>\n              );\n            }\n          )}\n        </NewsBox>\n      </Container>\n    </section>\n  );\n}\n\nexport default News;\n"],"names":["children","Wrapper","styled","p","theme","space","FreeWrapper","HeroWrapper","FreeContainer","HeroContainer","NewsBox","NewsArticle","colors","default","radii","shadows","ordinary","NewsLink","secondaryDark","newsApiQueryString","stringifyNewsApiQuery","useQuery","fetchNewsData","news","data","isLoading","isError","Container","map","author","title","content","publishedAt","url","urlToImage","date","normalizeDateString","href","src","alt","width"],"sourceRoot":""}