{"version":3,"file":"static/js/161.e0f80816.chunk.js","mappings":"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","sources":["components/PicBoard/PicBoard.styled.jsx","components/PicBoard/PicBoard.jsx","components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","pages/UserList/UserList.styled.jsx","components/PictureGallery/PictureGallery.styled.jsx","components/PictureGallery/PictureGallery.jsx","components/UserGalleryBtnSet/UserGalleryBtnSet.jsx","pages/UserList/UserList.jsx","services/sources/dashMenuSource.jsx","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@tanstack/react-query/src/useSyncExternalStore.ts","../node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(1, 1, 1, 0.3);\n`;\n\nexport const Content = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 12px;\n  max-width: 90vw;\n  width: 100%;\n  background-color: transparent;\n  border-radius: 8px;\n  box-shadow: ${p => p.theme.shadows.minimum};\n  overflow: hidden;\n`;\n\nexport const ContentBox = styled.div`\n  height: 90vh;\n  overflow-y: auto;\n`;\n","import { Backdrop, Content, ContentBox } from './PicBoard.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { closePicBoard, clearPictures } from 'redux/redux-slices/modalSlice';\n\nfunction PicBoard({ children }) {\n  const dispatch = useDispatch();\n  const picBoardRoot = document.querySelector('#picboard-root');\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        console.log('Close the board please');\n        dispatch(closePicBoard());\n        dispatch(clearPictures());\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n  }, [dispatch]);\n\n  const handleClick = () => {\n    dispatch(closePicBoard());\n    dispatch(clearPictures());\n  };\n\n  return createPortal(\n    <Backdrop>\n      <Content>\n        <ContentBox>\n          <button onClick={handleClick} type=\"button\">\n            Close\n          </button>\n          {children}\n        </ContentBox>\n      </Content>\n    </Backdrop>,\n    picBoardRoot\n  );\n}\n\nexport default PicBoard;\n","import styled from 'styled-components';\n\nexport const GalleryHolder = styled.div`\n  width: 260px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PosterHolder = styled.div`\n  width: 300px;\n  height: 460px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PhotoHolder = styled.div`\n  width: 160px;\n  height: 240px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const HolderImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import {\n  GalleryHolder,\n  PosterHolder,\n  PhotoHolder,\n  HolderImg,\n} from './Placeholder.styled';\nimport placeholder from '../../images/photoholder.jpg';\n\nexport function GalleryPlaceholder() {\n  return (\n    <GalleryHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </GalleryHolder>\n  );\n}\n\nexport function PosterPlaceholder() {\n  return (\n    <PosterHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PosterHolder>\n  );\n}\n\nexport function PhotoPlaceholder() {\n  return (\n    <PhotoHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PhotoHolder>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListBox = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  align-items: baseline;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 0;\n  display: inline-block;\n  text-decoration: none;\n  color: ${p => p.theme.colors.default};\n  text-shadow: ${p => p.theme.shadows.ordinary};\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MovieBox = styled.div`\n  position: relative;\n  width: 260px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const MovieName = styled.h3`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  padding: 8px;\n  margin: 0;\n  width: 228px;\n  font-size: 12px;\n  text-align: left;\n  background-color: ${p => p.theme.colors.secondaryDark};\n  border-radius: 4px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n`;\n\nexport const DeleteBtn = styled.button`\n  display: block;\n`;\n","import styled from 'styled-components';\n\nexport const Gallery = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nexport const Picture = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n","import { Gallery, Picture, Img } from './PictureGallery.styled';\nimport { useSelector } from 'react-redux';\nimport {\n  selectPictures,\n  selectPicturesLoading,\n  selectPicturesError,\n} from 'redux/selectors';\n\nfunction PictureGallery() {\n  const isLoading = useSelector(selectPicturesLoading);\n  const isError = useSelector(selectPicturesError);\n  const gallery = useSelector(selectPictures);\n  console.log(gallery);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Oops... Something went wrong!</div>;\n  }\n\n  return (\n    <>\n      {gallery && (\n        <Gallery>\n          {gallery.map(({ number, url }) => (\n            <Picture key={number}>\n              <Img src={url} alt={`Picture ${number}`} />\n            </Picture>\n          ))}\n        </Gallery>\n      )}\n    </>\n  );\n}\n\nexport default PictureGallery;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPicBoard } from 'redux/selectors';\nimport { openPicBoard } from 'redux/redux-slices/modalSlice';\nimport {\n  getRecommendedMovies,\n  getSimilarMovies,\n  getPicturesById,\n} from 'redux/redux-operations/tmdbOperations';\nimport { db } from '../../firebase';\nimport { doc } from '@firebase/firestore';\nimport { useMutation } from '@tanstack/react-query';\nimport { deleteFromUserList } from 'services/services';\n\nimport PicBoard from 'components/PicBoard';\nimport PictureGallery from 'components/PictureGallery';\n\nfunction UserGalleryBtnSet({ movieData }) {\n  const { list, movie, userId } = movieData;\n  const movieId = movie.id;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isPicBoardOpen = useSelector(selectPicBoard);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n\n    if (isPicBoardOpen) {\n      body.style.overflow = 'hidden';\n    } else {\n      body.style.overflow = 'visible';\n    }\n  }, [isPicBoardOpen]);\n\n  const deleteFromListMutation = useMutation(\n    ({ list, movie }) => {\n      const userListRef = doc(db, 'userLists', userId);\n      return deleteFromUserList(userListRef, list, movie);\n    },\n    {\n      onSuccess: () => {\n        console.log('Movie removed from the list successfully');\n      },\n      onError: () => {\n        console.log('Error removing movie from the list');\n      },\n    }\n  );\n\n  const handleDeleteFromUserListBtnClick = (list, movie) => {\n    const movieObj = { list, movie };\n    deleteFromListMutation.mutate(movieObj);\n  };\n\n  const handleUserGalleryBtnClick = evt => {\n    switch (evt.target.id) {\n      case 'recommend':\n        dispatch(getRecommendedMovies(movieId));\n        break;\n      case 'similar':\n        dispatch(getSimilarMovies(movieId));\n        break;\n      default:\n        return;\n    }\n    navigate('/movies');\n  };\n\n  const handlePicBoardBtnClick = () => {\n    dispatch(getPicturesById(movieId));\n    dispatch(openPicBoard());\n  };\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={() => handleDeleteFromUserListBtnClick(list.userList, movie)}\n      >\n        Delete from {list.content}\n      </button>\n      <button type=\"button\" id=\"recommend\" onClick={handleUserGalleryBtnClick}>\n        Recommendations\n      </button>\n      <button type=\"button\" id=\"similar\" onClick={handleUserGalleryBtnClick}>\n        Similar\n      </button>\n      <button type=\"button\" onClick={handlePicBoardBtnClick}>\n        See Pics\n      </button>\n      {isPicBoardOpen && (\n        <PicBoard>\n          <PictureGallery />\n        </PicBoard>\n      )}\n    </div>\n  );\n}\n\nexport default UserGalleryBtnSet;\n","import {\n  ListBox,\n  List,\n  StyledLink,\n  MovieImg,\n  MovieBox,\n  MovieName,\n} from './UserList.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUserListObj,\n  selectUser,\n  selectListError,\n  selectListLoading,\n} from 'redux/selectors';\nimport { dashMenuSource } from 'services/sources/dashMenuSource';\nimport { GalleryPlaceholder } from 'components/Placeholder';\nimport UserGalleryBtnSet from 'components/UserGalleryBtnSet/UserGalleryBtnSet';\n\nfunction UserList() {\n  const location = useLocation();\n  const { listId } = useParams();\n  const userListObj = useSelector(selectUserListObj);\n  const isLoading = useSelector(selectListLoading);\n  const isError = useSelector(selectListError);\n  const user = useSelector(selectUser);\n  const [userId, setUserId] = useState('');\n  const [list, setList] = useState({});\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n\n  useEffect(() => {\n    switch (listId) {\n      case 'favorites':\n        setList(prev => ({\n          ...prev,\n          userList: dashMenuSource[1].listRef,\n          caption: dashMenuSource[1].caption,\n          content: dashMenuSource[1].content,\n        }));\n        break;\n      case 'watchlist':\n        setList(prev => ({\n          ...prev,\n          userList: dashMenuSource[2].listRef,\n          content: dashMenuSource[2].content,\n        }));\n        break;\n      case 'seenlist':\n        setList(prev => ({\n          ...prev,\n          userList: dashMenuSource[3].listRef,\n          content: dashMenuSource[3].content,\n        }));\n        break;\n      default:\n        return;\n    }\n  }, [listId]);\n\n  useEffect(() => {\n    if (user) {\n      setUserId(user.userId);\n    }\n  }, [user]);\n\n  return (\n    <section>\n      <ListBox>\n        {isLoading || !userListObj || !list.userList ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <h2>{list.caption}</h2>\n            <List>\n              {userListObj[list.userList].map(movie => {\n                const { id, title, poster } = movie;\n                let movieId = '/movies/' + id.toString();\n                return (\n                  <li key={id}>\n                    <StyledLink to={movieId} state={{ from: location }}>\n                      <MovieBox>\n                        <MovieName>{title}</MovieName>\n                        {!isPosterLoaded && <GalleryPlaceholder />}\n                        {poster && (\n                          <MovieImg\n                            src={poster}\n                            alt=\"movieName\"\n                            onLoad={() => setIsPosterLoaded(true)}\n                          />\n                        )}\n                      </MovieBox>\n                    </StyledLink>\n                    <UserGalleryBtnSet movieData={{ list, movie, userId }} />\n                  </li>\n                );\n              })}\n            </List>\n          </>\n        )}\n        {isError && <p>Oops... Something went wrong!</p>}\n      </ListBox>\n    </section>\n  );\n}\n\nexport default UserList;\n","export const dashMenuSource = [\n  {\n    id: 'info',\n    listId: '',\n    listRef: null,\n    content: 'Info',\n    caption: 'My Information',\n  },\n  {\n    id: 'favorites',\n    listId: 'favorites',\n    listRef: 'favList',\n    content: 'Favorites',\n    caption: 'My Favorites',\n  },\n  {\n    id: 'watchlist',\n    listId: 'watchlist',\n    listRef: 'watchList',\n    content: 'Watchlist',\n    caption: 'I Wanted to Watch These',\n  },\n  {\n    id: 'seenlist',\n    listId: 'seenlist',\n    listRef: 'seenList',\n    content: 'Seen',\n    caption: 'I Have Already Seen These',\n  },\n];\n","import type { Action, Mutation } from './mutation'\nimport { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport type { QueryClient } from './queryClient'\nimport { Subscribable } from './subscribable'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverResult,\n  MutationObserverOptions,\n} from './types'\nimport { shallowEqualObjects } from './utils'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.length) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","import * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport {\n  notifyManager,\n  parseMutationArgs,\n  MutationObserver,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport { shouldThrowError } from './utils'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n","// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n","export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n"],"names":["Backdrop","styled","Content","p","theme","shadows","minimum","ContentBox","children","dispatch","useDispatch","picBoardRoot","document","querySelector","useEffect","window","addEventListener","e","code","console","log","closePicBoard","clearPictures","createPortal","onClick","type","GalleryHolder","PosterHolder","PhotoHolder","HolderImg","GalleryPlaceholder","src","placeholder","alt","PosterPlaceholder","PhotoPlaceholder","ListBox","List","StyledLink","Link","colors","default","ordinary","MovieImg","MovieBox","MovieName","secondaryDark","Gallery","Picture","Img","isLoading","useSelector","selectPicturesLoading","isError","selectPicturesError","gallery","selectPictures","map","number","url","movieData","list","movie","userId","movieId","id","navigate","useNavigate","isPicBoardOpen","selectPicBoard","body","style","overflow","deleteFromListMutation","useMutation","userListRef","doc","db","deleteFromUserList","onSuccess","onError","handleUserGalleryBtnClick","evt","target","getRecommendedMovies","getSimilarMovies","movieObj","mutate","handleDeleteFromUserListBtnClick","userList","content","getPicturesById","openPicBoard","PicBoard","location","useLocation","listId","useParams","userListObj","selectUserListObj","selectListLoading","selectListError","user","selectUser","useState","setUserId","setList","isPosterLoaded","setIsPosterLoaded","prev","dashMenuSource","caption","title","poster","toString","to","state","from","onLoad","listRef","setOptions","MutationObserver","bindMethods","updateResult","bind","reset","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","options","mutation","currentMutation","observer","onUnsubscribe","listeners","onMutationUpdate","length","removeObserver","action","notifyOptions","getCurrentResult","this","currentResult","undefined","variables","mutateOptions","build","addObserver","execute","getDefaultState","result","status","isSuccess","constructor","batch","hasListeners","_this$mutateOptions$o","data","notifyManager","context","onSettled","_this$mutateOptions$o3","error","forEach","listener","Subscribable","client","useQueryClient","React","arg2","parseMutationArgs","arg3","useCallback","onStoreChange","arg1","batchCalls","catch","noop","shouldThrowError","queryClient","useErrorBoundary","mutateAsync","useSyncExternalStore","uSES","_useErrorBoundary","params"],"sourceRoot":""}