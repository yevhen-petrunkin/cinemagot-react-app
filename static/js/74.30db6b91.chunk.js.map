{"version":3,"file":"static/js/74.30db6b91.chunk.js","mappings":"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","sources":["services/sources/homePageMenuSource.jsx","services/sources/tmdbGenresSource.jsx","pages/Home/Home.styled.jsx","components/Gallery/Gallery.styled.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/Gallery/Gallery.jsx","pages/Home/Home.jsx"],"sourcesContent":["export const homePageMenuSource = [\n  {\n    id: 'trending',\n    label: 'Trending Today',\n    value: 'trending',\n  },\n  {\n    id: 'current',\n    label: 'Now at Cinemas',\n    value: 'current',\n  },\n  {\n    id: 'popular',\n    label: 'Top Rated Current Movies',\n    value: 'popular',\n  },\n  {\n    id: 'top',\n    label: 'Top Rated Movies of All Times',\n    value: 'top',\n  },\n];\n","export const tmdbGenres = [\n  { value: 28, label: 'Action' },\n  { value: 12, label: 'Adventure' },\n  { value: 16, label: 'Animation' },\n  { value: 35, label: 'Comedy' },\n  { value: 80, label: 'Crime' },\n  { value: 99, label: 'Documentary' },\n  { value: 18, label: 'Drama' },\n  { value: 10751, label: 'Family' },\n  { value: 14, label: 'Fantasy' },\n  { value: 36, label: 'History' },\n  { value: 27, label: 'Horror' },\n  { value: 10402, label: 'Music' },\n  { value: 9648, label: 'Mystery' },\n  { value: 10749, label: 'Romance' },\n  { value: 878, label: 'Science Fiction' },\n  { value: 10770, label: 'TV Movie' },\n  { value: 53, label: 'Thriller' },\n  { value: 10752, label: 'War' },\n  { value: 37, label: 'Western' },\n];\n","import styled from 'styled-components';\n\nexport const HomeCaption = styled.h1`\n  font-size: 26px;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  align-items: baseline;\n  fustify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 0;\n  display: inline-block;\n  font-size: 18px;\n`;\n\nexport const MovieImg = styled.img`\n  border-radius: 8px;\n`;\n\nexport const MovieBox = styled.div`\n  width: 200px;\n`;\n","// import PropTypes from 'prop-types';\nimport { StyledLink, MovieImg, MovieBox } from './Movie.styled';\n\nfunction Movie({ movie, location }) {\n  const { id, movieName, poster } = movie;\n\n  let movieId = '';\n  const page = location.state.page;\n\n  switch (page) {\n    case 'home':\n      movieId = `/movies/${id}`;\n      break;\n    case 'movies':\n      movieId = `${id}`;\n      break;\n    default:\n      return;\n  }\n\n  return (\n    <li>\n      <StyledLink to={movieId} state={{ from: location }}>\n        <MovieBox>\n          <p>{movieName}</p>\n          <MovieImg src={poster} alt=\"movieName\" width=\"200px\" />\n        </MovieBox>\n      </StyledLink>\n    </li>\n  );\n}\n\nexport default Movie;\n\n// Movie.propTypes = {\n//   id: PropTypes.number.isRequired,\n//   movieName: PropTypes.string.isRequired,\n//   location: PropTypes.shape({\n//     state: PropTypes.shape({\n//       page: PropTypes.string.isRequired,\n//     }).isRequired,\n//   }).isRequired,\n// };\n","// import PropTypes from 'prop-types';\nimport { List } from './Gallery.styled';\nimport Movie from 'components/Movie';\n\nfunction Gallery({ movies, location }) {\n  return (\n    <List>\n      {movies.map(movie => {\n        return <Movie key={movie.id} movie={movie} location={location} />;\n      })}\n    </List>\n  );\n}\n\nexport default Gallery;\n\n// Gallery.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       movieName: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   location: PropTypes.shape({\n//     state: PropTypes.shape({\n//       page: PropTypes.string.isRequired,\n//     }).isRequired,\n//   }).isRequired,\n// };\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectGallery,\n  selectGalleryCaption,\n  selectGalleryLoading,\n  selectGalleryError,\n} from 'redux/selectors';\nimport {\n  getHomePageGallery,\n  getMoviesByParams,\n} from 'redux/redux-operations/tmdbOperations';\nimport { homePageMenuSource } from 'services/sources/homePageMenuSource';\nimport { tmdbGenres } from 'services/sources/tmdbGenresSource';\n\nimport { HomeCaption } from './Home.styled';\nimport Select from 'react-select';\nimport Gallery from 'components/Gallery';\n\nfunction Home() {\n  const gallery = useSelector(selectGallery);\n  const caption = useSelector(selectGalleryCaption);\n  const isLoading = useSelector(selectGalleryLoading);\n  const isError = useSelector(selectGalleryError);\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  location.state = { page: 'home' };\n\n  const [galleryType, setGalleryType] = useState('trending');\n  const [params, setParams] = useState({});\n\n  useEffect(() => {\n    const keys = Object.keys(params);\n    if (keys.length) {\n      dispatch(getMoviesByParams(params));\n    } else {\n      dispatch(getHomePageGallery(galleryType ?? 'trending'));\n    }\n  }, [dispatch, galleryType, params]);\n\n  const handleRadioBtnChange = e => {\n    setParams({});\n    setGalleryType(e.target.value);\n  };\n\n  const handleSelectGenreChange = e => {\n    setParams(prev => {\n      console.log(e);\n      return { ...prev, genres: e };\n    });\n  };\n\n  return (\n    <section>\n      <HomeCaption>{caption ?? 'CineMaGot'}</HomeCaption>\n      <ul>\n        {homePageMenuSource.map(({ id, label, value }) => (\n          <li key={id}>\n            <label style={{ display: 'block' }}>\n              <input\n                type=\"radio\"\n                name=\"galleryChoice\"\n                value={value}\n                onChange={handleRadioBtnChange}\n              />\n              {label}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <Select\n        options={tmdbGenres}\n        isMulti={true}\n        backspaceRemovesValue={true}\n        hideSelectedOptions={true}\n        isSearchable={true}\n        onChange={handleSelectGenreChange}\n      />\n      {isLoading && <span>Loading...</span>}\n      {isError && <span>Oops... Something went wrong!</span>}\n\n      {gallery && <Gallery movies={gallery} location={location} />}\n    </section>\n  );\n}\n\nexport default Home;\n\n// Gallery.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       movieName: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   location: PropTypes.shape({\n//     state: PropTypes.shape({\n//       page: PropTypes.string.isRequired,\n//     }).isRequired,\n//   }).isRequired,\n// };\n"],"names":["homePageMenuSource","id","label","value","tmdbGenres","HomeCaption","styled","List","StyledLink","Link","MovieImg","MovieBox","movie","location","movieName","poster","movieId","state","page","to","from","src","alt","width","movies","map","gallery","useSelector","selectGallery","caption","selectGalleryCaption","isLoading","selectGalleryLoading","isError","selectGalleryError","dispatch","useDispatch","useLocation","useState","galleryType","setGalleryType","params","setParams","useEffect","Object","keys","length","getMoviesByParams","getHomePageGallery","handleRadioBtnChange","e","target","style","display","type","name","onChange","options","isMulti","backspaceRemovesValue","hideSelectedOptions","isSearchable","prev","console","log","genres"],"sourceRoot":""}