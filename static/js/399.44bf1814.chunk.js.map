{"version":3,"file":"static/js/399.44bf1814.chunk.js","mappings":"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","sources":["components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","pages/UserList/UserList.styled.jsx","pages/UserList/UserList.jsx","services/sources/dashMenuSource.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GalleryHolder = styled.div`\n  width: 260px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PosterHolder = styled.div`\n  width: 300px;\n  height: 460px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PhotoHolder = styled.div`\n  width: 160px;\n  height: 240px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const HolderImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import {\n  GalleryHolder,\n  PosterHolder,\n  PhotoHolder,\n  HolderImg,\n} from './Placeholder.styled';\nimport photoholder from '../../images/photoholder.jpg';\nimport placeholder from '../../images/placeholder.jpg';\n\nexport function GalleryPlaceholder() {\n  return (\n    <GalleryHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </GalleryHolder>\n  );\n}\n\nexport function PosterPlaceholder() {\n  return (\n    <PosterHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PosterHolder>\n  );\n}\n\nexport function PhotoPlaceholder() {\n  return (\n    <PhotoHolder>\n      <HolderImg src={photoholder} alt=\"placeholder\" />\n    </PhotoHolder>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListBox = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  align-items: baseline;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 0;\n  display: inline-block;\n  text-decoration: none;\n  color: ${p => p.theme.colors.default};\n  text-shadow: ${p => p.theme.shadows.ordinary};\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const MovieBox = styled.div`\n  position: relative;\n  width: 260px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const MovieName = styled.h3`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  padding: 8px;\n  margin: 0;\n  width: 228px;\n  font-size: 12px;\n  text-align: left;\n  background-color: ${p => p.theme.colors.secondaryDark};\n  border-radius: 4px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n`;\n","import {\n  ListBox,\n  List,\n  StyledLink,\n  MovieImg,\n  MovieBox,\n  MovieName,\n} from './UserList.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  selectUserListObj,\n  selectListError,\n  selectListLoading,\n} from 'redux/selectors';\nimport { dashMenuSource } from 'services/sources/dashMenuSource';\nimport { GalleryPlaceholder } from 'components/Placeholder';\n\nfunction UserList() {\n  const { listId } = useParams();\n  const userListObj = useSelector(selectUserListObj);\n  const isLoading = useSelector(selectListLoading);\n  const isError = useSelector(selectListError);\n  const [list, setList] = useState({});\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n\n  useEffect(() => {\n    switch (listId) {\n      case 'favorites':\n        setList(prev => ({\n          ...prev,\n          userList: dashMenuSource[1].listRef,\n          caption: dashMenuSource[1].caption,\n        }));\n        break;\n      case 'watchlist':\n        setList(prev => ({\n          ...prev,\n          userList: dashMenuSource[2].listRef,\n          caption: dashMenuSource[2].caption,\n        }));\n        break;\n      case 'seenlist':\n        setList(prev => ({\n          ...prev,\n          userList: dashMenuSource[3].listRef,\n          caption: dashMenuSource[3].caption,\n        }));\n        break;\n      default:\n        return;\n    }\n  }, [listId]);\n\n  return (\n    <section>\n      <ListBox>\n        {isLoading || !userListObj || !list.userList ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <h2>{list.caption}</h2>\n            <List>\n              {userListObj[list.userList].map(({ id, title, poster }) => {\n                let movieId = '/movies/' + id.toString();\n                return (\n                  <li key={id}>\n                    <StyledLink to={movieId}>\n                      <MovieBox>\n                        <MovieName>{title}</MovieName>\n                        {!isPosterLoaded && <GalleryPlaceholder />}\n                        {poster && (\n                          <MovieImg\n                            src={poster}\n                            alt=\"movieName\"\n                            onLoad={() => setIsPosterLoaded(true)}\n                          />\n                        )}\n                      </MovieBox>\n                    </StyledLink>\n                  </li>\n                );\n              })}\n            </List>\n          </>\n        )}\n        {isError && <p>Oops... Something went wrong!</p>}\n      </ListBox>\n    </section>\n  );\n}\n\nexport default UserList;\n","export const dashMenuSource = [\n  {\n    id: 'info',\n    listId: '',\n    listRef: null,\n    content: 'Info',\n    caption: 'My Information',\n  },\n  {\n    id: 'favorites',\n    listId: 'favorites',\n    listRef: 'favList',\n    content: 'Favorites',\n    caption: 'My Favorites',\n  },\n  {\n    id: 'watchlist',\n    listId: 'watchlist',\n    listRef: 'watchList',\n    content: 'Watchlist',\n    caption: 'I Wanted to Watch These',\n  },\n  {\n    id: 'seenlist',\n    listId: 'seenlist',\n    listRef: 'seenList',\n    content: 'Seen',\n    caption: 'I Have Already Seen These',\n  },\n];\n"],"names":["GalleryHolder","styled","PosterHolder","PhotoHolder","HolderImg","GalleryPlaceholder","src","placeholder","alt","PosterPlaceholder","PhotoPlaceholder","photoholder","ListBox","List","StyledLink","Link","p","theme","colors","default","shadows","ordinary","MovieImg","MovieBox","MovieName","secondaryDark","listId","useParams","userListObj","useSelector","selectUserListObj","isLoading","selectListLoading","isError","selectListError","useState","list","setList","isPosterLoaded","setIsPosterLoaded","useEffect","prev","userList","dashMenuSource","caption","map","id","title","poster","movieId","toString","to","onLoad","listRef","content"],"sourceRoot":""}