{"version":3,"file":"static/js/815.ecfaf4af.chunk.js","mappings":"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","sources":["components/Placeholder/Placeholder.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/normalize.jsx","services/services.jsx"],"sourcesContent":["import { Placeholder } from 'semantic-ui-react';\n\nexport function PosterPlaceholder() {\n  return (\n    <Placeholder\n      style={{\n        height: 300,\n        width: 200,\n        position: 'absolute',\n        borderRadius: '10px',\n      }}\n    >\n      <Placeholder.Image />\n    </Placeholder>\n  );\n}\n\nexport function PhotoPlaceholder() {\n  return (\n    <Placeholder\n      style={{\n        height: 240,\n        width: 160,\n        borderRadius: '10px',\n      }}\n    >\n      <Placeholder.Image />\n    </Placeholder>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackBtn = styled(Link)`\n  margin-bottom: 10px;\n  padding: 5px 12px;\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 16px;\n  background-color: #cce2ff;\n  border-color: #cce2ff;\n  border-radius: 6px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #4183c4;\n    border-color: #4183c4;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 200px;\n  height: 300px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n`;\n\nexport const MovieCaption = styled.h1`\n  margin-bottom: 10px;\n  font-size: 28px;\n`;\n\nexport const OverviewCaption = styled.h2`\n  margin-bottom: 10px;\n  font-size: 26px;\n`;\n\nexport const GenresCaption = styled.h3`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const AdditCaption = styled.h4`\n  margin-bottom: 10px;\n  font-size: 22px;\n`;\n\nexport const TextContent = styled.p`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 5px 0;\n  font-size: 22px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const AdditLink = styled(Link)`\n  padding: 10px 0;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { getMovieById, getPictureAddress } from 'services';\nimport { stringifyData } from 'services';\nimport {\n  GoBackBtn,\n  Poster,\n  MovieCaption,\n  TextContent,\n  OverviewCaption,\n  GenresCaption,\n  AdditCaption,\n  List,\n  ListItem,\n  AdditLink,\n} from './MovieDetails.styled';\nimport { PosterPlaceholder } from 'components/Placeholder';\nimport LoaderComp from 'components/Loader';\n\nfunction MovieDetails() {\n  const [movieData, setMovieData] = useState({});\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(movieId).then(movie => {\n      const { poster_path, title, popularity, overview, genres } = movie;\n      setMovieData({\n        poster: getPictureAddress(poster_path),\n        title,\n        score: popularity,\n        overview,\n        genres: stringifyData(genres),\n      });\n    });\n  }, [movieId]);\n\n  if (!movieData) {\n    return <LoaderComp />;\n  }\n\n  const { poster, title, score, overview, genres } = movieData;\n\n  return (\n    <>\n      <section>\n        <GoBackBtn to={backLinkHref}>\n          <HiArrowNarrowLeft />\n          <span>Go Back</span>\n        </GoBackBtn>\n        <div>\n          {!isPosterLoaded && <PosterPlaceholder />}\n          <Poster\n            src={poster}\n            alt={title}\n            onLoad={() => setIsPosterLoaded(true)}\n          />\n        </div>\n        <div style={{ padding: '20px 0' }}>\n          <MovieCaption>{title}</MovieCaption>\n          <TextContent>User Score: {score}</TextContent>\n          <OverviewCaption>Overview</OverviewCaption>\n          <TextContent>{overview}</TextContent>\n          <GenresCaption>Genres</GenresCaption>\n          <TextContent>{genres}</TextContent>\n        </div>\n      </section>\n      <section>\n        <AdditCaption>Additional Information</AdditCaption>\n        <nav>\n          <List>\n            <ListItem>\n              <AdditLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </AdditLink>\n            </ListItem>\n            <ListItem>\n              <AdditLink to=\"review\" state={{ from: backLinkHref }}>\n                Reviews\n              </AdditLink>\n            </ListItem>\n          </List>\n        </nav>\n        <Suspense fallback={<LoaderComp />}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","export function normalizeMovies(movies) {\n  return movies.map(movie => ({\n    id: movie.id,\n    movieName: movie.original_title,\n  }));\n}\n\nexport function normalizeCredits(credits) {\n  return credits.map(credit => ({\n    id: credit.id,\n    profilePhoto: credit.profile_path,\n    actorName: credit.name,\n    charName: credit.character,\n  }));\n}\n\nexport function normalizeReviews(reviews) {\n  return reviews.map(review => ({\n    id: review.id,\n    author: review.author,\n    content: review.content,\n  }));\n}\n\nexport function stringifyData(array) {\n  return array.map(item => item.name).join(', ');\n}\n","const BASE = 'https://api.themoviedb.org/3';\nconst PICTURE_BASE = 'https://image.tmdb.org/t/p/w500';\nconst KEY = 'ae692f579055feb645577941bd67daeb';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await fetch(`${BASE}/trending/movie/day?api_key=${KEY}`);\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw new Error('Not Found');\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesByKeyword(query) {\n  try {\n    const response = await fetch(\n      `${BASE}/search/movie?api_key=${KEY}&query=${query}`\n    );\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw new Error('Not Found');\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await fetch(`${BASE}/movie/${id}?api_key=${KEY}`);\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw new Error('Not Found');\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getCreditsById(id) {\n  try {\n    const response = await fetch(`${BASE}/movie/${id}/credits?api_key=${KEY}`);\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw new Error('Not Found');\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const response = await fetch(`${BASE}/movie/${id}/reviews?api_key=${KEY}`);\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw new Error('Not Found');\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getPictureAddress(param) {\n  return param ? `${PICTURE_BASE}${param}` : '';\n}\n"],"names":["PosterPlaceholder","Placeholder","style","height","width","position","borderRadius","PhotoPlaceholder","GoBackBtn","styled","Link","Poster","MovieCaption","OverviewCaption","GenresCaption","AdditCaption","TextContent","List","ListItem","AdditLink","useState","movieData","setMovieData","isPosterLoaded","setIsPosterLoaded","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieById","then","movie","poster_path","title","popularity","overview","genres","poster","getPictureAddress","score","stringifyData","Loader","to","src","alt","onLoad","padding","Suspense","fallback","normalizeMovies","movies","map","id","movieName","original_title","normalizeCredits","credits","credit","profilePhoto","profile_path","actorName","name","charName","character","normalizeReviews","reviews","review","author","content","array","item","join","BASE","KEY","getTrendingMovies","fetch","response","ok","json","Error","console","log","message","getMoviesByKeyword","query","getCreditsById","getReviewsById","param"],"sourceRoot":""}