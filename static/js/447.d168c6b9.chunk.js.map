{"version":3,"file":"static/js/447.d168c6b9.chunk.js","mappings":"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","sources":["components/ReviewDetails/ReviewDetails.jsx","pages/Reviews/Reviews.jsx","services/normalize.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/services.jsx"],"sourcesContent":["function ReviewDetails({ data }) {\n  const { author, content } = data;\n\n  return (\n    <li>\n      <h5>Author: {author}</h5>\n      <p>{content}</p>\n    </li>\n  );\n}\n\nexport default ReviewDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from 'services/services';\nimport { normalizeReviews } from 'services/normalize';\nimport ReviewDetails from 'components/ReviewDetails/ReviewDetails';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    getReviewsById(movieId).then(data =>\n      setReviews(normalizeReviews(data.results))\n    );\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        const { author } = review;\n        return <ReviewDetails key={author} data={review} />;\n      })}\n    </ul>\n  );\n}\n\nexport default Reviews;\n","export function normalizeMovies(movies) {\n  return movies.map(movie => ({\n    id: movie.id,\n    movieName: movie.original_title,\n  }));\n}\n\nexport function normalizeCredits(credits) {\n  return credits.map(credit => ({\n    profilePhoto: credit.profile_path,\n    actorName: credit.name,\n    charName: credit.character,\n  }));\n}\n\nexport function normalizeReviews(reviews) {\n  return reviews.map(review => ({\n    author: review.author,\n    content: review.content,\n  }));\n}\n\nexport function stringifyData(array) {\n  return array.map(item => item.name).join(', ');\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE = 'https://api.themoviedb.org/3';\nconst PICTURE_BASE = 'https://image.tmdb.org/t/p/w500';\nconst KEY = 'ae692f579055feb645577941bd67daeb';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await fetch(`${BASE}/trending/movie/day?api_key=${KEY}`);\n    return await response.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesByKeyword(query) {\n  try {\n    const response = await fetch(\n      `${BASE}/search/movie?api_key=${KEY}&query=${query}`\n    );\n    return await response.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const response = await fetch(`${BASE}/movie/${id}?api_key=${KEY}`);\n    return await response.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getCreditsById(id) {\n  try {\n    const response = await fetch(`${BASE}/movie/${id}/credits?api_key=${KEY}`);\n    return await response.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const response = await fetch(`${BASE}/movie/${id}/reviews?api_key=${KEY}`);\n    return await response.json();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport function getPictureAddress(param) {\n  return `${PICTURE_BASE}${param}`;\n}\n"],"names":["data","author","content","useState","reviews","setReviews","movieId","useParams","useEffect","getReviewsById","then","normalizeReviews","results","map","review","normalizeMovies","movies","movie","id","movieName","original_title","normalizeCredits","credits","credit","profilePhoto","profile_path","actorName","name","charName","character","stringifyData","array","item","join","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE","KEY","getTrendingMovies","fetch","response","json","console","log","message","getMoviesByKeyword","query","getMovieById","getCreditsById","getPictureAddress","param"],"sourceRoot":""}