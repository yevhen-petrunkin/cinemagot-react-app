{"version":3,"file":"static/js/865.56ae91af.chunk.js","mappings":"sLAEaA,E,QAAUC,GAAAA,IAAH,sfAED,SAAAC,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAGH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAGH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCbtB,MAJA,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,SAACL,EAAD,UAAUK,GAClB,C,oFCFYC,EAAWL,EAAAA,GAAAA,IAAH,+IASRM,EAAUN,EAAAA,GAAAA,IAAH,uQAUJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,OAApB,IAIJC,EAAaT,EAAAA,GAAAA,IAAH,8D,iDCgBvB,MAnCA,YAAiC,IAAbI,EAAY,EAAZA,SACZM,GAAWC,EAAAA,EAAAA,MACXC,EAAeC,SAASC,cAAc,kBAkB5C,OAhBAC,EAAAA,EAAAA,YAAU,WAQRC,OAAOC,iBAAiB,WAPF,SAAAC,GACL,WAAXA,EAAEC,OACJC,QAAQC,IAAI,0BACZX,GAASY,EAAAA,EAAAA,OACTZ,GAASa,EAAAA,EAAAA,OAEZ,GAEF,GAAE,CAACb,KAOGc,EAAAA,EAAAA,eACL,SAACnB,EAAD,WACE,SAACC,EAAD,WACE,UAACG,EAAD,YACE,mBAAQgB,QATI,WAClBf,GAASY,EAAAA,EAAAA,OACTZ,GAASa,EAAAA,EAAAA,MACV,EAMqCG,KAAK,SAAnC,mBAGCtB,SAIPQ,EAEH,C,uICrCYe,EAAgB3B,EAAAA,GAAAA,IAAH,0IAQb4B,EAAe5B,EAAAA,GAAAA,IAAH,0IAQZ6B,EAAc7B,EAAAA,GAAAA,IAAH,0IAQX8B,EAAY9B,EAAAA,GAAAA,IAAH,yD,mBClBf,SAAS+B,IACd,OACE,SAACJ,EAAD,WACE,SAACG,EAAD,CAAWE,IAAKC,EAAaC,IAAI,iBAGtC,CAEM,SAASC,IACd,OACE,SAACP,EAAD,WACE,SAACE,EAAD,CAAWE,IAAKC,EAAaC,IAAI,iBAGtC,CAEM,SAASE,IACd,OACE,SAACP,EAAD,WACE,SAACC,EAAD,CAAWE,IAAKC,EAAaC,IAAI,iBAGtC,C,iIC3BYG,GAAYrC,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAH,4eAQX,SAAAC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOC,OAAnB,IACU,SAAAvC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOE,aAAnB,IACD,SAAAxC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOE,aAAnB,IAEP,SAAAxC,GAAC,OAAIA,EAAEC,MAAMK,QAAQmC,QAApB,IAMJ,SAAAzC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOE,aAAnB,IACU,SAAAxC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOI,WAAnB,IACD,SAAA1C,GAAC,OAAIA,EAAEC,MAAMqC,OAAOI,WAAnB,IAIZlC,EAAaT,EAAAA,GAAAA,IAAH,uJAGZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOC,OAAnB,IACU,SAAAvC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOK,WAAnB,IACP,SAAA3C,GAAC,OAAIA,EAAEC,MAAMK,QAAQmC,QAApB,IAIJG,EAAS7C,EAAAA,GAAAA,IAAH,qHAON8C,EAAc9C,EAAAA,GAAAA,GAAH,oEAKX+C,EAAU/C,EAAAA,GAAAA,GAAH,oEAKPM,EAAUN,EAAAA,GAAAA,EAAH,oEAKPgD,EAAOhD,EAAAA,GAAAA,GAAH,kGAOJiD,EAAWjD,EAAAA,GAAAA,GAAH,gDAIRkD,GAAYlD,EAAAA,EAAAA,IAAOsC,EAAAA,GAAPtC,CAAH,+KAIX,SAAAC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOI,WAAnB,I,6JCpBZ,I,QAAA,EA5CA,YAA0C,IAAdQ,EAAa,EAAbA,UACpBC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACzB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEA1C,EAAAA,EAAAA,YAAU,WACJqC,GACFK,EAAUL,EAAKI,OAElB,GAAE,CAACJ,IAEJ,IAAMM,GAAqBC,EAAAA,EAAAA,IACzB,SAAAC,GACE,IAAMC,GAAcC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,YAAaP,GACzC,OAAOQ,EAAAA,EAAAA,IAAeH,EAAaD,EAAMT,EAC1C,GACD,CACEc,UAAW,WACT7C,QAAQC,IAAI,uCACb,EACD6C,QAAS,WACP9C,QAAQC,IAAI,iCACb,IAQL,OACE,yBACG8C,EAAAA,EAAAA,KAAyB,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACxB,mBAEE3C,KAAK,SACLD,QAAS,kBAVmBmC,EAUeQ,OATjDV,EAAmBY,OAAOV,GADQ,IAAAA,CAUnB,EAHX,SAKGS,GAJID,EAFiB,KAW/B,ECjDYpB,EAAOhD,EAAAA,GAAAA,GAAH,0EAMJuE,EAAWvE,EAAAA,GAAAA,OAAH,gPAIV,SAAAC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOI,WAAnB,I,oBCVC6B,EAAWxE,EAAAA,GAAAA,IAAH,gIAGC,SAAAC,GAAC,OAAIA,EAAEC,MAAMqC,OAAOkC,MAAnB,IAKVC,EAAQ1E,EAAAA,GAAAA,OAAH,yDCOlB,MAfA,YAA2B,IAAR2E,EAAO,EAAPA,IACjB,OACE,SAACH,EAAD,UACGG,IACC,SAACD,EAAD,CACE1C,IAAK2C,EACLC,MAAM,uBACNC,MAAM,sGACNC,iBAAe,KAKxB,ECqDD,MAzDA,YAAiC,IAAZC,EAAW,EAAXA,QACnB,GAAgCxB,EAAAA,EAAAA,UAAS,IAAzC,eAAOyB,EAAP,KAAiBC,EAAjB,KACMvE,GAAWC,EAAAA,EAAAA,MACXuE,GAAiB7B,EAAAA,EAAAA,IAAY8B,EAAAA,KAEnCpE,EAAAA,EAAAA,YAAU,WACR,IAAMqE,EAAOvE,SAASC,cAAc,QAGlCsE,EAAKC,MAAMC,SADTJ,EACoB,SAEA,SAEzB,GAAE,CAACA,IAEJ,OAIIK,EAAAA,EAAAA,GAAS,CAAC,SAAUR,IAAU,kBAChCS,EAAAA,EAAAA,IAAgBT,GAASU,KAAKC,EAAAA,GADE,IAH1BC,EADR,EACEC,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,QAKF,OAAID,GACK,sCAGLC,GACK,0DASP,iCACE,SAAC,EAAD,UACGH,GACCA,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWvE,EAAlB,EAAkBA,KAAMwE,EAAxB,EAAwBA,KAAMvB,EAA9B,EAA8BA,IAA9B,OACT,yBACE,UAACJ,EAAD,CAAU7C,KAAK,SAASD,QAAS,kBAV3CwD,EAUqEN,QATrEjE,GAASyF,EAAAA,EAAAA,MASkC,EAAjC,UACGzE,EADH,KACWuE,EADX,MACyBC,MAFlBF,EADA,MAQdd,IACC,SAACkB,EAAA,EAAD,WACE,SAAC,EAAD,CAASzB,IAAKK,QAKvB,E,UCiDD,OA5FA,WAAyB,IAAD,IACtB,GAA4CzB,EAAAA,EAAAA,WAAS,GAArD,eAAO8C,EAAP,KAAuBC,EAAvB,KAEQvB,GAAYwB,EAAAA,EAAAA,MAAZxB,QAGFyB,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,GAIIpB,EAAAA,EAAAA,GAAS,CAAC,QAASR,IAAU,kBAC/B6B,EAAAA,EAAAA,IAAe7B,GAASU,KAAKoB,EAAAA,GADE,IAHzB1D,EADR,EACEyC,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,QAKF,GAAID,EACF,OAAO,SAACiB,GAAA,EAAD,IAGT,IAAQC,EAAgD5D,EAAhD4D,OAAQnC,EAAwCzB,EAAxCyB,MAAOoC,EAAiC7D,EAAjC6D,WAAYC,EAAqB9D,EAArB8D,SAAUC,EAAW/D,EAAX+D,OACvCC,GAAeC,EAAAA,EAAAA,IAAcF,GAEnC,OACE,iCACE,8BACE,UAACG,EAAA,EAAD,YACE,UAAChF,EAAD,CAAWiF,GAAId,EAAf,WACE,SAAC,MAAD,KACA,0CAEF,6BACKH,GAAkBP,KAAY,SAAC,KAAD,IAChCiB,IACC,SAAClE,EAAD,CACEb,IAAK+E,EACL7E,IAAK0C,EACL2C,OAAQ,kBAAMjB,GAAkB,EAAxB,QAId,4BACE,SAAC,EAAD,CAAkBnD,UAAWA,KAC7B,UAAC1C,EAAD,YACE,SAACqC,EAAD,WAAegD,GAAWlB,KAC1B,UAACtE,EAAD,2BAAuBwF,GAAWkB,SAEpC,UAACvG,EAAD,YACE,SAACsC,EAAD,wBACA,SAACzC,EAAD,WAAWwF,GAAWmB,QAExB,UAACxG,EAAD,YACE,SAACsC,EAAD,sBACA,SAACzC,EAAD,WAAWwF,GAAWqB,QAExB,UAAC1G,EAAD,YACE,SAACsC,EAAD,8BACA,SAAC,EAAD,CAAWgC,QAASA,gBAM5B,8BACE,SAACsC,EAAA,EAAD,WACE,UAAC5G,EAAD,YACE,SAACsC,EAAD,sCACA,0BACE,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAWoE,GAAG,OAAOZ,MAAO,CAAEC,KAAMH,GAApC,qBAIF,SAACvD,EAAD,WACE,SAACC,EAAD,CAAWoE,GAAG,SAASZ,MAAO,CAAEC,KAAMH,GAAtC,6BAON,SAAC,EAAAgB,SAAD,CAAUC,UAAU,SAACX,GAAA,EAAD,IAApB,UACE,SAAC,KAAD,eAOb,C","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/PicBoard/PicBoard.styled.jsx","components/PicBoard/PicBoard.jsx","components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/HandleListBtnSet/HandleListBtnSet.jsx","components/VideoList/VideoList.styled.jsx","components/Footage/Footage.styled.jsx","components/Footage/Footage.jsx","components/VideoList/VideoList.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  @media only screen and (min-width: 1200px) {\n    padding-top: ${p => p.theme.space[1] * 7}px;\n    padding-bottom: ${p => p.theme.space[1] * 7}px;\n    padding-left: ${p => p.theme.space[5] * 3}px;\n    padding-right: ${p => p.theme.space[5] * 3}px;\n  }\n  @media only screen and (max-width: 1199px) {\n    padding-top: ${p => p.theme.space[5]}px;\n    padding-bottom: ${p => p.theme.space[5]}px;\n    padding-left: ${p => p.theme.space[5] * 2}px;\n    padding-right: ${p => p.theme.space[5] * 2}px;\n  }\n  @media only screen and (max-width: 480px) {\n    padding-top: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n  } ;\n`;\n","import { Wrapper } from './Container.styled';\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(1, 1, 1, 0.3);\n`;\n\nexport const Content = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 12px;\n  max-width: 90vw;\n  width: 100%;\n  background-color: transparent;\n  border-radius: 8px;\n  box-shadow: ${p => p.theme.shadows.minimum};\n  overflow: hidden;\n`;\n\nexport const ContentBox = styled.div`\n  height: 90vh;\n  overflow-y: auto;\n`;\n","import { Backdrop, Content, ContentBox } from './PicBoard.styled';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { closePicBoard, clearPictures } from 'redux/redux-slices/modalSlice';\n\nfunction PicBoard({ children }) {\n  const dispatch = useDispatch();\n  const picBoardRoot = document.querySelector('#picboard-root');\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        console.log('Close the board please');\n        dispatch(closePicBoard());\n        dispatch(clearPictures());\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n  }, [dispatch]);\n\n  const handleClick = () => {\n    dispatch(closePicBoard());\n    dispatch(clearPictures());\n  };\n\n  return createPortal(\n    <Backdrop>\n      <Content>\n        <ContentBox>\n          <button onClick={handleClick} type=\"button\">\n            Close\n          </button>\n          {children}\n        </ContentBox>\n      </Content>\n    </Backdrop>,\n    picBoardRoot\n  );\n}\n\nexport default PicBoard;\n","import styled from 'styled-components';\n\nexport const GalleryHolder = styled.div`\n  width: 260px;\n  height: 400px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PosterHolder = styled.div`\n  width: 300px;\n  height: 460px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const PhotoHolder = styled.div`\n  width: 160px;\n  height: 240px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n  overflow: hidden;\n`;\n\nexport const HolderImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import {\n  GalleryHolder,\n  PosterHolder,\n  PhotoHolder,\n  HolderImg,\n} from './Placeholder.styled';\nimport placeholder from '../../images/photoholder.jpg';\n\nexport function GalleryPlaceholder() {\n  return (\n    <GalleryHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </GalleryHolder>\n  );\n}\n\nexport function PosterPlaceholder() {\n  return (\n    <PosterHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PosterHolder>\n  );\n}\n\nexport function PhotoPlaceholder() {\n  return (\n    <PhotoHolder>\n      <HolderImg src={placeholder} alt=\"placeholder\" />\n    </PhotoHolder>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackBtn = styled(Link)`\n  margin-bottom: 10px;\n  padding: 8px 12px;\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.default};\n  background-color: ${p => p.theme.colors.secondaryDark};\n  border: 1px solid ${p => p.theme.colors.secondaryDark};\n  border-radius: 8px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n  cursor: pointer;\n  transition: color 200ms ease, background-color 200ms ease, border 200ms ease;\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.secondaryDark};\n    background-color: ${p => p.theme.colors.accentLight};\n    border: 1px solid ${p => p.theme.colors.accentLight};\n  }\n`;\n\nexport const ContentBox = styled.div`\n  margin-bottom: 20px;\n  padding: 20px;\n  color: ${p => p.theme.colors.default};\n  background-color: ${p => p.theme.colors.primaryDark};\n  box-shadow: ${p => p.theme.shadows.ordinary};\n  border-radius: 12px;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 460px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px black;\n`;\n\nexport const MainCaption = styled.h1`\n  margin-bottom: 10px;\n  font-size: 28px;\n`;\n\nexport const Caption = styled.h2`\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const Content = styled.p`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 5px 0;\n  font-size: 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const AdditLink = styled(Link)`\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.accentLight};\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/selectors';\nimport { userListBtnSetSource } from 'services/sources/btnSetSource';\nimport { db } from '../../firebase';\nimport { doc } from '@firebase/firestore';\nimport { useMutation } from '@tanstack/react-query';\nimport { updateUserList } from 'services/services';\n\nfunction HandleListBtnSet({ movieData }) {\n  const user = useSelector(selectUser);\n  const [userId, setUserId] = useState('');\n\n  useEffect(() => {\n    if (user) {\n      setUserId(user.userId);\n    }\n  }, [user]);\n\n  const updateListMutation = useMutation(\n    list => {\n      const userListRef = doc(db, 'userLists', userId);\n      return updateUserList(userListRef, list, movieData);\n    },\n    {\n      onSuccess: () => {\n        console.log('Movie added to the list successfully');\n      },\n      onError: () => {\n        console.log('Error adding movie to the list');\n      },\n    }\n  );\n\n  const handleAddToUserListBtnClick = list => {\n    updateListMutation.mutate(list);\n  };\n\n  return (\n    <div>\n      {userListBtnSetSource.map(({ listId, text }) => (\n        <button\n          key={listId}\n          type=\"button\"\n          onClick={() => handleAddToUserListBtnClick(listId)}\n        >\n          {text}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default HandleListBtnSet;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const VideoBtn = styled.button`\n  padding-top: 8px;\n  padding-bottom: 8px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.accentLight};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const VideoBox = styled.div`\n  width: 89vw;\n  height: 79vh;\n  border: 4px solid ${p => p.theme.colors.accent};\n  border-radius: 12px;\n  overflow: hidden;\n`;\n\nexport const Video = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n","import { VideoBox, Video } from './Footage.styled';\n\nfunction Footage({ url }) {\n  return (\n    <VideoBox>\n      {url && (\n        <Video\n          src={url}\n          title=\"YouTube video player\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></Video>\n      )}\n    </VideoBox>\n  );\n}\n\nexport default Footage;\n","import { List, VideoBtn } from './VideoList.styled';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPicBoard } from 'redux/selectors';\nimport { openPicBoard } from 'redux/redux-slices/modalSlice';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchVideosById } from 'services';\nimport { normalizeVideos } from 'services/normalize';\nimport PicBoard from 'components/PicBoard';\nimport Footage from 'components/Footage/Footage';\n\nfunction VideoList({ movieId }) {\n  const [videoUrl, setVideoUrl] = useState('');\n  const dispatch = useDispatch();\n  const isPicBoardOpen = useSelector(selectPicBoard);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n\n    if (isPicBoardOpen) {\n      body.style.overflow = 'hidden';\n    } else {\n      body.style.overflow = 'visible';\n    }\n  }, [isPicBoardOpen]);\n\n  const {\n    data: videos,\n    isLoading,\n    isError,\n  } = useQuery(['videos', movieId], () =>\n    fetchVideosById(movieId).then(normalizeVideos)\n  );\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (isError) {\n    return <p>Oops... Something went wrong!</p>;\n  }\n\n  const handleVideoBtnClick = address => {\n    setVideoUrl(address);\n    dispatch(openPicBoard());\n  };\n\n  return (\n    <>\n      <List>\n        {videos &&\n          videos.map(({ id, videoName, type, date, url }) => (\n            <li key={id}>\n              <VideoBtn type=\"button\" onClick={() => handleVideoBtnClick(url)}>\n                {type}: {videoName} - {date}\n              </VideoBtn>\n            </li>\n          ))}\n      </List>\n      {isPicBoardOpen && (\n        <PicBoard>\n          <Footage url={videoUrl} />\n        </PicBoard>\n      )}\n    </>\n  );\n}\n\nexport default VideoList;\n","import {\n  GoBackBtn,\n  ContentBox,\n  Poster,\n  MainCaption,\n  Content,\n  Caption,\n  List,\n  ListItem,\n  AdditLink,\n} from './MovieDetails.styled';\nimport { useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchMovieById, stringifyData } from 'services';\nimport { normalizeMovieData } from 'services/normalize';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { PosterPlaceholder } from 'components/Placeholder';\nimport Container from 'components/Container';\nimport HandleListBtnSet from 'components/HandleListBtnSet';\nimport VideoList from 'components/VideoList/VideoList';\nimport LoaderComp from 'components/Loader';\n\nfunction MovieDetails() {\n  const [isPosterLoaded, setIsPosterLoaded] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const {\n    data: movieData,\n    isLoading,\n    isError,\n  } = useQuery(['movie', movieId], () =>\n    fetchMovieById(movieId).then(normalizeMovieData)\n  );\n\n  if (isLoading) {\n    return <LoaderComp />;\n  }\n\n  const { poster, title, popularity, overview, genres } = movieData;\n  const genresString = stringifyData(genres);\n\n  return (\n    <>\n      <section>\n        <Container>\n          <GoBackBtn to={backLinkHref}>\n            <HiArrowNarrowLeft />\n            <span>Go Back</span>\n          </GoBackBtn>\n          <div>\n            {(!isPosterLoaded || isError) && <PosterPlaceholder />}\n            {poster && (\n              <Poster\n                src={poster}\n                alt={title}\n                onLoad={() => setIsPosterLoaded(true)}\n              />\n            )}\n          </div>\n          <div>\n            <HandleListBtnSet movieData={movieData} />\n            <ContentBox>\n              <MainCaption>{!isError && title}</MainCaption>\n              <Content>User Score: {!isError && popularity}</Content>\n            </ContentBox>\n            <ContentBox>\n              <Caption>Overview</Caption>\n              <Content>{!isError && overview}</Content>\n            </ContentBox>\n            <ContentBox>\n              <Caption>Genres</Caption>\n              <Content>{!isError && genresString}</Content>\n            </ContentBox>\n            <ContentBox>\n              <Caption>Watch Trailers</Caption>\n              <VideoList movieId={movieId} />\n            </ContentBox>\n          </div>\n        </Container>\n      </section>\n\n      <section>\n        <Container>\n          <ContentBox>\n            <Caption>Additional Information</Caption>\n            <nav>\n              <List>\n                <ListItem>\n                  <AdditLink to=\"cast\" state={{ from: backLinkHref }}>\n                    Cast\n                  </AdditLink>\n                </ListItem>\n                <ListItem>\n                  <AdditLink to=\"review\" state={{ from: backLinkHref }}>\n                    Reviews\n                  </AdditLink>\n                </ListItem>\n              </List>\n            </nav>\n\n            <Suspense fallback={<LoaderComp />}>\n              <Outlet />\n            </Suspense>\n          </ContentBox>\n        </Container>\n      </section>\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["Wrapper","styled","p","theme","space","children","Backdrop","Content","shadows","minimum","ContentBox","dispatch","useDispatch","picBoardRoot","document","querySelector","useEffect","window","addEventListener","e","code","console","log","closePicBoard","clearPictures","createPortal","onClick","type","GalleryHolder","PosterHolder","PhotoHolder","HolderImg","GalleryPlaceholder","src","placeholder","alt","PosterPlaceholder","PhotoPlaceholder","GoBackBtn","Link","colors","default","secondaryDark","ordinary","accentLight","primaryDark","Poster","MainCaption","Caption","List","ListItem","AdditLink","movieData","user","useSelector","selectUser","useState","userId","setUserId","updateListMutation","useMutation","list","userListRef","doc","db","updateUserList","onSuccess","onError","userListBtnSetSource","listId","text","mutate","VideoBtn","VideoBox","accent","Video","url","title","allow","allowFullScreen","movieId","videoUrl","setVideoUrl","isPicBoardOpen","selectPicBoard","body","style","overflow","useQuery","fetchVideosById","then","normalizeVideos","videos","data","isLoading","isError","map","id","videoName","date","openPicBoard","PicBoard","isPosterLoaded","setIsPosterLoaded","useParams","backLinkHref","useLocation","state","from","fetchMovieById","normalizeMovieData","Loader","poster","popularity","overview","genres","genresString","stringifyData","Container","to","onLoad","Suspense","fallback"],"sourceRoot":""}