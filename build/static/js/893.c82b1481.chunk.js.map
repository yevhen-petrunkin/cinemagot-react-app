{"version":3,"file":"static/js/893.c82b1481.chunk.js","mappings":"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","sources":["components/PicBoard/PicBoard.styled.jsx","components/PicBoard/PicBoard.jsx","components/Widgets/Widgets.styled.jsx","services/widgetFunc.js","components/Widgets/TotalWatchedWidg.jsx","components/Widgets/TotalMoviesWidg.jsx","components/Widgets/TotalRuntimeWidg.jsx","components/Widgets/MeanBudgetWidg.jsx","components/Widgets/MeanPopularityWidg.jsx","components/Widgets/MeanScoreWidg.jsx","components/Widgets/TotalByListWidg.jsx","components/Widgets/FavGenresWidg.jsx","components/Widgets/StarWidg.jsx","components/Widgets/HeartWidg.jsx","services/sources/tmdbGenresSource.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Backdrop = styled.div`\r\n  ${({ theme: { space, mediaQueries } }) => `\r\n  position: fixed;\r\n  top: ${space[0]};\r\n  left: ${space[0]};\r\n  padding: 10vw;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(1, 1, 1, 0.3);\r\n\r\n  ${mediaQueries.extraLarge} {\r\n    padding-top: 11vw;\r\n  }\r\n\r\n  ${mediaQueries.large} {\r\n    padding-top: 15vw;\r\n  }\r\n\r\n  ${mediaQueries.medium} {\r\n    padding-top: 15vw;\r\n  }\r\n\r\n  ${mediaQueries.small} {\r\n    padding-top: 15vw;\r\n  }\r\n\r\n  ${mediaQueries.lowerSmall} {\r\n    padding-top: 25vw;\r\n  }\r\n\r\n  ${mediaQueries.tiny} {\r\n    padding-top: 20vw;\r\n  }\r\n  \r\n  `}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  ${({ theme: { radii, shadows } }) => `\r\n  position: relative;\r\n  max-width: 90vw;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border-radius: ${radii[2]}px;\r\n  box-shadow: ${shadows.minimum};\r\n  height: 90vh;\r\n  overflow: hidden;\r\n\r\n  `}\r\n`;\r\n\r\nexport const CloseBtn = styled.button`\r\n  ${({\r\n    theme: { colors, sizes, borders, zIndices, shadows, mediaQueries },\r\n    top,\r\n    right,\r\n  }) => `\r\n  position: absolute;\r\n  z-index: ${zIndices[2]};\r\n  top: ${top}px;\r\n  right: ${right}px;\r\n  width: ${sizes[1] * 7}px;\r\n  height: ${sizes[1] * 7}px;\r\n  color: ${colors.defaultWeak};\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border: ${borders.heroBtnSmall};\r\n  border-radius: 50%;\r\n  box-shadow: ${shadows.elevated};\r\n  cursor: pointer;\r\n  transition: color 300ms ease, border 300ms ease;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: ${colors.accent};\r\n    border: ${borders.heroBtnSmallHover};\r\n  }\r\n\r\n  ${mediaQueries.large} {\r\n    top: ${top - 12}px;\r\n    right: ${right - 24}px;\r\n  }\r\n\r\n  ${mediaQueries.small} {\r\n    top: ${top - 20}px;\r\n    right: ${right - 28}px;\r\n  }\r\n\r\n  ${mediaQueries.tiny} {\r\n    top: ${top - 8}px;\r\n    right: ${right - 24}px;\r\n    width: ${sizes[1] * 6}px;\r\n    height: ${sizes[1] * 6}px;\r\n  }\r\n  `}\r\n`;\r\n","import { Backdrop, Content, CloseBtn } from './PicBoard.styled';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closePicBoard, clearPictures } from 'redux/redux-slices/modalSlice';\r\nimport { TfiClose } from 'react-icons/tfi';\r\n\r\nfunction PicBoard({ children }) {\r\n  const dispatch = useDispatch();\r\n  const picBoardRoot = document.querySelector('#picboard-root');\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = e => {\r\n      if (e.code === 'Escape') {\r\n        dispatch(closePicBoard());\r\n        dispatch(clearPictures());\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeydown);\r\n  }, [dispatch]);\r\n\r\n  const handleCloseBtnClick = () => {\r\n    dispatch(closePicBoard());\r\n    dispatch(clearPictures());\r\n  };\r\n\r\n  return createPortal(\r\n    <Backdrop>\r\n      <Content>\r\n        <CloseBtn\r\n          type=\"button\"\r\n          title=\"Close\"\r\n          top={32}\r\n          right={40}\r\n          onClick={handleCloseBtnClick}\r\n        >\r\n          <TfiClose style={{ width: '100%', height: '100%' }} />\r\n        </CloseBtn>\r\n        {children}\r\n      </Content>\r\n    </Backdrop>,\r\n    picBoardRoot\r\n  );\r\n}\r\n\r\nexport default PicBoard;\r\n","import styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Box = styled.div`\r\n  ${({ theme: { space, mediaQueries } }) => `\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${space[3]}px;\r\n  height: 100%;\r\n\r\n\r\n  ${mediaQueries.large} {\r\n    padding: ${space[2]}px; \r\n  }\r\n\r\n  `}\r\n`;\r\n\r\nexport const ChartBox = styled.div`\r\n  ${({ theme: { sizes, mediaQueries } }) => `\r\n    max-width: ${sizes[1] * 100}px;\r\n    max-height: ${sizes[1] * 100}px;\r\n\r\n  ${mediaQueries.medium} {\r\n    max-width: ${sizes[1] * 54}px;\r\n    max-height: ${sizes[1] * 54}px;  \r\n  }\r\n\r\n  ${mediaQueries.small} {\r\n    max-width: ${sizes[1] * 100}px;\r\n    max-height: ${sizes[1] * 100}px; \r\n  }\r\n\r\n  ${mediaQueries.lowerSmall} {\r\n    max-width: ${sizes[1] * 65}px;\r\n    max-height: ${sizes[1] * 65}px;   \r\n  }\r\n\r\n  ${mediaQueries.tiny} {\r\n    max-width: ${sizes[1] * 36}px;\r\n    max-height: ${sizes[1] * 36}px; \r\n  }\r\n\r\n  `}\r\n`;\r\n\r\nexport const Caption = styled.h2`\r\n  ${({ theme: { space, fontSizes, mediaQueries } }) => `\r\n  margin: ${space[0]};\r\n  font-size: ${fontSizes[3]}px;\r\n\r\n  ${mediaQueries.medium} {\r\n    font-size: ${fontSizes[2]}px;\r\n  }\r\n\r\n  ${mediaQueries.small} {\r\n    font-size: ${fontSizes[1]}px;\r\n  }\r\n\r\n  ${mediaQueries.lowerSmall} {\r\n    font-size: ${fontSizes[1]}px;\r\n  }\r\n  \r\n  `}\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  ${({ theme: { space, fontSizes, mediaQueries } }) => `\r\n  margin: ${space[0]};\r\n  font-size: ${fontSizes[6]}px;\r\n  \r\n  ${mediaQueries.medium} {\r\n    font-size: ${fontSizes[4]}px;\r\n  }\r\n\r\n  ${mediaQueries.small} {\r\n    font-size: ${fontSizes[3]}px;\r\n  }\r\n\r\n  ${mediaQueries.lowerSmall} {\r\n    font-size: ${fontSizes[3]}px;\r\n  }\r\n\r\n  ${mediaQueries.tiny} {\r\n    font-size: ${fontSizes[2]}px;\r\n  }\r\n  `}\r\n`;\r\n\r\nexport const RateList = styled.ul`\r\n  ${({ theme: { space } }) => `\r\n  padding: ${space[0]};\r\n  margin: ${space[0]};\r\n  display: flex;\r\n  list-style: none;\r\n  width: 100%;\r\n   \r\n  `}\r\n`;\r\n\r\nexport const StarItem = styled.li`\r\n  ${({ theme: { colors }, number }) => `\r\n    width: 20%;\r\n    \r\n  &:nth-child(1) {\r\n    color: ${Number(number) >= 50 ? colors.star : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    color: ${Number(number) >= 100 ? colors.star : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    color: ${Number(number) >= 200 ? colors.star : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(4) {\r\n    color: ${Number(number) >= 500 ? colors.star : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(5) {\r\n    color: ${Number(number) >= 900 ? colors.star : colors.defaultStrong};\r\n  }\r\n  `}\r\n`;\r\n\r\nexport const HeartItem = styled.li`\r\n  ${({ theme: { colors }, number }) => `\r\n    width: 20%;\r\n    \r\n  &:nth-child(1) {\r\n    color: ${Number(number) >= 1 ? colors.alert : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    color: ${Number(number) >= 3 ? colors.alert : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    color: ${Number(number) >= 5 ? colors.alert : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(4) {\r\n    color: ${Number(number) >= 7 ? colors.alert : colors.defaultStrong};\r\n  }\r\n\r\n  &:nth-child(5) {\r\n    color: ${Number(number) >= 9 ? colors.alert : colors.defaultStrong};\r\n  }\r\n  `}\r\n`;\r\n\r\nStarItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n};\r\n\r\nHeartItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n};\r\n","import { tmdbGenreColors } from './sources/tmdbGenresSource';\r\nimport { userListBtnSetSource } from './sources/btnSetSource';\r\n\r\nexport function countTotalMoviesInOneList(obj, list) {\r\n  if (!obj) {\r\n    return 0;\r\n  }\r\n\r\n  return obj[list].length || 0;\r\n}\r\n\r\nexport function countAllMoviesInUserLists(obj) {\r\n  if (!obj) {\r\n    return 0;\r\n  }\r\n  const favTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[0].listId\r\n  );\r\n  const watchTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[1].listId\r\n  );\r\n  const seenTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[2].listId\r\n  );\r\n\r\n  return favTotal + watchTotal + seenTotal;\r\n}\r\n\r\nexport function countMoviesByUserList(obj) {\r\n  if (!obj) {\r\n    return [];\r\n  }\r\n  const favTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[0].listId\r\n  );\r\n  const watchTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[1].listId\r\n  );\r\n  const seenTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[2].listId\r\n  );\r\n\r\n  return userListBtnSetSource.map((item, index) => {\r\n    return {\r\n      list: item.caption,\r\n      total: index === 0 ? favTotal : index === 1 ? watchTotal : seenTotal,\r\n    };\r\n  });\r\n}\r\n\r\nexport function countTotalRuntime(obj) {\r\n  if (!obj) {\r\n    return 0;\r\n  }\r\n  const timeInHours =\r\n    obj.seenList.reduce((acc, { runtime }) => (acc += Number(runtime)), 0) / 60;\r\n\r\n  return timeInHours.toFixed(2);\r\n}\r\n\r\nexport function countMeanBudget(obj) {\r\n  if (!obj) {\r\n    return 0;\r\n  }\r\n  const favTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[0].listId\r\n  );\r\n  const commonBudget = obj.favList.reduce(\r\n    (acc, { budget }) => (acc += Number(budget)),\r\n    0\r\n  );\r\n\r\n  const meanBudget = favTotal ? commonBudget / favTotal : 0;\r\n\r\n  return meanBudget.toFixed(0);\r\n}\r\n\r\nexport function countMeanPopularity(obj) {\r\n  if (!obj) {\r\n    return 0;\r\n  }\r\n  const favTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[0].listId\r\n  );\r\n  const commonPop = obj.favList.reduce(\r\n    (acc, { popularity }) => (acc += Number(popularity)),\r\n    0\r\n  );\r\n\r\n  const meanPop = favTotal ? commonPop / favTotal : 0;\r\n\r\n  return meanPop.toFixed(2);\r\n}\r\n\r\nexport function countMeanScore(obj) {\r\n  if (!obj) {\r\n    return 0;\r\n  }\r\n  const favTotal = countTotalMoviesInOneList(\r\n    obj,\r\n    userListBtnSetSource[0].listId\r\n  );\r\n  const commonScore = obj.favList.reduce(\r\n    (acc, { score }) => (acc += Number(score)),\r\n    0\r\n  );\r\n\r\n  const meanScore = favTotal ? commonScore / favTotal : 0;\r\n\r\n  return meanScore.toFixed(2);\r\n}\r\n\r\nexport function countFavoriteGenres(obj) {\r\n  const genreArr = getGenreArray(obj);\r\n  const uniqueGenres = getUniqueGenres(genreArr);\r\n  const countedGenres = countGenres(genreArr, uniqueGenres);\r\n  const favoriteGenres = getFavoriteGenres(countedGenres);\r\n  return favoriteGenres;\r\n}\r\n\r\nfunction getGenreArray(data) {\r\n  if (!data) {\r\n    return [];\r\n  }\r\n  return data.favList.flatMap(({ genres }) =>\r\n    genres.map(genre => genre.name.toLowerCase())\r\n  );\r\n}\r\n\r\nfunction getUniqueGenres(array) {\r\n  return array.filter((genre, ind, arr) => arr.indexOf(genre) === ind);\r\n}\r\n\r\nfunction countGenres(array1, array2) {\r\n  return array2.map(item => {\r\n    const number = array1.reduce((acc, genre) => {\r\n      if (item === genre) {\r\n        return (acc += 1);\r\n      }\r\n      return acc;\r\n    }, 0);\r\n    return { genre: item, number };\r\n  });\r\n}\r\n\r\nfunction getFavoriteGenres(array) {\r\n  return array\r\n    .map(movie => {\r\n      const matchingGenre = tmdbGenreColors.find(\r\n        item => movie.genre === item.genre.toLowerCase()\r\n      );\r\n      return {\r\n        ...movie,\r\n        genre: matchingGenre.genre,\r\n        color: matchingGenre.color,\r\n      };\r\n    })\r\n    .sort((a, b) => b.number - a.number);\r\n}\r\n","import { Box, Caption, Info } from './Widgets.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countTotalMoviesInOneList } from 'services/widgetFunc';\r\n\r\nexport function TotalWatchedWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const totalWatched = countTotalMoviesInOneList(listData, 'seenList');\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Total Movies Watched</Caption>\r\n      <Info>{totalWatched}</Info>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, Info } from './Widgets.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countAllMoviesInUserLists } from 'services/widgetFunc';\r\n\r\nexport function TotalMoviesWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const moviesTotal = countAllMoviesInUserLists(listData);\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Total Movies</Caption>\r\n      <Info>{moviesTotal}</Info>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, Info } from './Widgets.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countTotalRuntime } from 'services/widgetFunc';\r\n\r\nexport function TotalRuntimeWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const totalRuntime = countTotalRuntime(listData);\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Time Spent Watching</Caption>\r\n      <Info>{totalRuntime} hrs</Info>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, Info } from './Widgets.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countMeanBudget } from 'services/widgetFunc';\r\n\r\nexport function MeanBudgetWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const meanBudget = countMeanBudget(listData);\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Average Favorites Budget</Caption>\r\n      <Info>{Number(meanBudget).toLocaleString('en-EN')} USD</Info>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, Info } from './Widgets.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countMeanPopularity } from 'services/widgetFunc';\r\n\r\nexport function MeanPopularityWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const meanPop = countMeanPopularity(listData);\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Average Favorites Hype</Caption>\r\n      <Info>{meanPop}</Info>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, Info } from './Widgets.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countMeanScore } from 'services/widgetFunc';\r\n\r\nexport function MeanScoreWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const meanScore = countMeanScore(listData);\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Average Favorites Score</Caption>\r\n      <Info>{meanScore} out of 10.00</Info>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, ChartBox } from './Widgets.styled';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countMoviesByUserList } from 'services/widgetFunc';\r\nimport { mainTheme } from 'services';\r\n\r\nChart.register(...registerables);\r\nChart.defaults.color = mainTheme.colors.defaultWeak;\r\n\r\nexport function TotalByListWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const preparedData = countMoviesByUserList(listData);\r\n\r\n  const lists = preparedData.map(list => list.list);\r\n  const numbers = preparedData.map(list => list.total);\r\n  const { accentWeak, success, secondaryWeak } = mainTheme.colors;\r\n  const colors = [accentWeak, secondaryWeak, success];\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: lists,\r\n    datasets: [\r\n      {\r\n        data: numbers,\r\n        backgroundColor: colors,\r\n        borderColor: ['transparent'],\r\n        minBarLength: 2,\r\n        borderRadius: 4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>My Lists</Caption>\r\n      {preparedData.length > 0 && (\r\n        <ChartBox>\r\n          <Bar redraw={true} options={options} data={data} />\r\n        </ChartBox>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Caption, ChartBox } from './Widgets.styled';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserListObj } from 'redux/selectors';\r\nimport { countFavoriteGenres } from 'services/widgetFunc';\r\nimport { mainTheme } from 'services';\r\n\r\nChart.register(...registerables);\r\nChart.defaults.color = mainTheme.colors.defaultWeak;\r\n\r\nexport function FavGenresWidg() {\r\n  const listData = useSelector(selectUserListObj);\r\n  const preparedData = countFavoriteGenres(listData);\r\n\r\n  const genres = preparedData.map(genre => genre.genre);\r\n  const numbers = preparedData.map(genre => genre.number);\r\n  const colors = preparedData.map(genre => genre.color);\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: genres,\r\n    datasets: [\r\n      {\r\n        data: numbers,\r\n        backgroundColor: colors,\r\n        borderColor: ['transparent'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Caption>Favorite Genres</Caption>\r\n      {preparedData.length > 0 && (\r\n        <ChartBox>\r\n          <Pie redraw={true} options={options} data={data} />\r\n        </ChartBox>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { RateList, StarItem } from './Widgets.styled';\r\nimport PropTypes from 'prop-types';\r\nimport { RxStarFilled } from 'react-icons/rx';\r\n\r\nexport function StarWidg({ number }) {\r\n  return (\r\n    <RateList>\r\n      <StarItem number={number}>\r\n        <RxStarFilled style={{ width: '100%', height: '100%' }} />\r\n      </StarItem>\r\n      <StarItem number={number}>\r\n        <RxStarFilled style={{ width: '100%', height: '100%' }} />\r\n      </StarItem>\r\n      <StarItem number={number}>\r\n        <RxStarFilled style={{ width: '100%', height: '100%' }} />\r\n      </StarItem>\r\n      <StarItem number={number}>\r\n        <RxStarFilled style={{ width: '100%', height: '100%' }} />\r\n      </StarItem>\r\n      <StarItem number={number}>\r\n        <RxStarFilled style={{ width: '100%', height: '100%' }} />\r\n      </StarItem>\r\n    </RateList>\r\n  );\r\n}\r\n\r\nStarWidg.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n};\r\n\r\nStarItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n};\r\n","import { RateList, HeartItem } from './Widgets.styled';\r\nimport PropTypes from 'prop-types';\r\nimport { RxHeartFilled } from 'react-icons/rx';\r\n\r\nexport function HeartWidg({ number }) {\r\n  return (\r\n    <RateList>\r\n      <HeartItem number={number}>\r\n        <RxHeartFilled style={{ width: '100%', height: '100%' }} />\r\n      </HeartItem>\r\n      <HeartItem number={number}>\r\n        <RxHeartFilled style={{ width: '100%', height: '100%' }} />\r\n      </HeartItem>\r\n      <HeartItem number={number}>\r\n        <RxHeartFilled style={{ width: '100%', height: '100%' }} />\r\n      </HeartItem>\r\n      <HeartItem number={number}>\r\n        <RxHeartFilled style={{ width: '100%', height: '100%' }} />\r\n      </HeartItem>\r\n      <HeartItem number={number}>\r\n        <RxHeartFilled style={{ width: '100%', height: '100%' }} />\r\n      </HeartItem>\r\n    </RateList>\r\n  );\r\n}\r\n\r\nHeartWidg.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n};\r\n\r\nHeartItem.propTypes = {\r\n  number: PropTypes.number.isRequired,\r\n};\r\n","export const tmdbGenres = [\r\n  { value: 28, label: 'Action' },\r\n  { value: 12, label: 'Adventure' },\r\n  { value: 16, label: 'Animation' },\r\n  { value: 35, label: 'Comedy' },\r\n  { value: 80, label: 'Crime' },\r\n  { value: 99, label: 'Documentary' },\r\n  { value: 18, label: 'Drama' },\r\n  { value: 10751, label: 'Family' },\r\n  { value: 14, label: 'Fantasy' },\r\n  { value: 36, label: 'History' },\r\n  { value: 27, label: 'Horror' },\r\n  { value: 10402, label: 'Music' },\r\n  { value: 9648, label: 'Mystery' },\r\n  { value: 10749, label: 'Romance' },\r\n  { value: 878, label: 'Science Fiction' },\r\n  { value: 10770, label: 'TV Movie' },\r\n  { value: 53, label: 'Thriller' },\r\n  { value: 10752, label: 'War' },\r\n  { value: 37, label: 'Western' },\r\n];\r\n\r\nexport const tmdbGenreColors = [\r\n  { color: '#f9f871', genre: 'Action' },\r\n  { color: '#ffBe4d', genre: 'Adventure' },\r\n  { color: '#ff8051', genre: 'Animation' },\r\n  { color: '#f44169', genre: 'Comedy' },\r\n  { color: '#00c6b3', genre: 'Crime' },\r\n  { color: '#0096e2', genre: 'Documentary' },\r\n  { color: '#0053ca', genre: 'Drama' },\r\n  { color: '#ffe8ff', genre: 'Family' },\r\n  { color: '#c2fcf3', genre: 'Fantasy' },\r\n  { color: '#8a6b9a', genre: 'History' },\r\n  { color: '#d24717', genre: 'Horror' },\r\n  { color: '#930100', genre: 'Music' },\r\n  { color: '#e8d5b5', genre: 'Mystery' },\r\n  { color: '#8bafce', genre: 'Romance' },\r\n  { color: '#fffade', genre: 'Science Fiction' },\r\n  { color: '#8bafce', genre: 'TV Movie' },\r\n  { color: '#ffaaff', genre: 'Thriller' },\r\n  { color: '#6e5e00', genre: 'War' },\r\n  { color: '#954f00', genre: 'Western' },\r\n];\r\n"],"names":["Backdrop","styled","theme","space","mediaQueries","extraLarge","large","medium","small","lowerSmall","tiny","Content","radii","shadows","minimum","CloseBtn","colors","sizes","borders","zIndices","top","right","defaultWeak","heroBtnSmall","elevated","accent","heroBtnSmallHover","children","dispatch","useDispatch","picBoardRoot","document","querySelector","useEffect","window","addEventListener","e","code","closePicBoard","clearPictures","createPortal","type","title","onClick","style","width","height","Box","ChartBox","Caption","fontSizes","Info","RateList","StarItem","number","Number","star","defaultStrong","HeartItem","alert","propTypes","PropTypes","countTotalMoviesInOneList","obj","list","length","countFavoriteGenres","array1","genreArr","data","favList","flatMap","genres","map","genre","name","toLowerCase","getGenreArray","uniqueGenres","filter","ind","arr","indexOf","favoriteGenres","array","movie","matchingGenre","tmdbGenreColors","item","color","sort","a","b","getFavoriteGenres","reduce","acc","TotalWatchedWidg","totalWatched","useSelector","selectUserListObj","TotalMoviesWidg","listData","moviesTotal","userListBtnSetSource","TotalRuntimeWidg","totalRuntime","seenList","runtime","toFixed","MeanBudgetWidg","meanBudget","favTotal","commonBudget","budget","countMeanBudget","toLocaleString","MeanPopularityWidg","meanPop","commonPop","popularity","countMeanPopularity","MeanScoreWidg","meanScore","commonScore","score","countMeanScore","TotalByListWidg","preparedData","watchTotal","seenTotal","index","caption","total","countMoviesByUserList","lists","numbers","mainTheme","accentWeak","success","labels","datasets","backgroundColor","secondaryWeak","borderColor","minBarLength","borderRadius","redraw","options","maintainAspectRatio","scales","y","beginAtZero","plugins","legend","display","FavGenresWidg","Chart","registerables","StarWidg","HeartWidg","tmdbGenres","value","label"],"sourceRoot":""}