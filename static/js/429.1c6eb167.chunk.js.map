{"version":3,"file":"static/js/429.1c6eb167.chunk.js","mappings":"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","sources":["pages/Dashboard/Dashboard.styled.jsx","components/DashMenu/DashMenu.styled.jsx","components/DashMenu/DashMenu.jsx","pages/Dashboard/Dashboard.jsx","services/sources/dashMenuSource.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DashContainer = styled.div`\n  display: grid;\n  grid-template-columns: minmax(232px, 232px) 1fr;\n`;\n\nexport const DashBox = styled.div`\n  height: 100vh;\n  font-size: 20px;\n  text-align: center;\n  color: ${p => p.theme.colors.default};\n  background-color: ${p => p.theme.colors.primary};\n  box-shadow: ${p => p.theme.shadows.elevated};\n`;\n\nexport const UserBox = styled.div`\n  padding: 20px;\n`;\n\nexport const UserCaption = styled.h1`\n  margin-bottom: 20px;\n  font-size: 24px;\n`;\n\nexport const UserImg = styled.div`\n  margin-bottom: 20px;\n  border-radius: 40px;\n  overflow: hidden;\n`;\n\nexport const UserList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const UserItem = styled.li`\n  margin-bottom: 24px;\n`;\n\nexport const UserBtnSet = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n`;\n\nexport const UserBtn = styled.button`\n  padding: 8px 12px;\n  font-size: 16px;\n  color: ${p => p.theme.colors.default};\n  background-color: ${p => p.theme.colors.secondaryDark};\n  border: 1px solid ${p => p.theme.colors.secondaryDark};\n  border-radius: 8px;\n  box-shadow: ${p => p.theme.shadows.ordinary};\n  cursor: pointer;\n  transition: color 200ms ease, background-color 200ms ease, border 200ms ease;\n\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.secondaryDark};\n    background-color: ${p => p.theme.colors.accentLight};\n    border: 1px solid ${p => p.theme.colors.accentLight};\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavMenu = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const NavStyledLink = styled(NavLink)`\n  padding: 12px 0;\n  display: block;\n  text-decoration: none;\n  color: inherit;\n  transition: background-color 200ms ease;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.default};\n    background-color: ${p => p.theme.colors.primaryLight};\n  }\n  &.active {\n    color: ${p => p.theme.colors.accentLight};\n    background-color: ${p => p.theme.colors.primaryDark};\n  }\n`;\n","import { dashMenuSource } from 'services/sources/dashMenuSource';\nimport { NavMenu, NavStyledLink } from './DashMenu.styled';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useRef } from 'react';\n\nfunction DashMenu() {\n  const navigate = useNavigate();\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      navigate('info');\n    }\n  }, [navigate]);\n\n  return (\n    <>\n      <NavMenu>\n        {dashMenuSource.map(({ id, listId, content }) => (\n          <li key={id}>\n            <NavStyledLink to={'info/' + listId}>{content}</NavStyledLink>\n          </li>\n        ))}\n      </NavMenu>\n    </>\n  );\n}\n\nexport default DashMenu;\n","import {\n  DashContainer,\n  DashBox,\n  UserBox,\n  UserCaption,\n  UserImg,\n  UserList,\n  UserItem,\n  UserBtnSet,\n  UserBtn,\n} from './Dashboard.styled';\nimport { useEffect, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUserLists } from 'redux/redux-operations/firebaseOperations';\nimport { selectUser } from 'redux/selectors';\nimport DashMenu from 'components/DashMenu';\nimport LoaderComp from 'components/Loader';\nimport magot from '../../images/logo.jpg';\n\nfunction Dashboard() {\n  const isUserAuth = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isUserAuth) {\n      const userId = isUserAuth.userId;\n      dispatch(fetchUserLists(userId));\n    }\n  }, [dispatch, isUserAuth]);\n\n  return (\n    <section>\n      <DashContainer>\n        <DashBox>\n          <UserBox>\n            <UserCaption>My CineMansion</UserCaption>\n            <UserImg>\n              <img src={magot} alt=\"magot\" width=\"100%\" />\n            </UserImg>\n            <UserList>\n              <UserItem>Username</UserItem>\n              <UserItem>\n                from <span>Country</span>\n              </UserItem>\n            </UserList>\n            <UserBtnSet>\n              <UserBtn>Avatar</UserBtn>\n              <UserBtn>Theme</UserBtn>\n            </UserBtnSet>\n          </UserBox>\n          <DashMenu />\n        </DashBox>\n\n        <div>\n          <Suspense fallback={<LoaderComp />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </DashContainer>\n    </section>\n  );\n}\n\nexport default Dashboard;\n","export const dashMenuSource = [\n  {\n    id: 'info',\n    listId: '',\n    listRef: null,\n    content: 'Info',\n    caption: 'My Information',\n  },\n  {\n    id: 'favorites',\n    listId: 'favorites',\n    listRef: 'favList',\n    content: 'Favorites',\n    caption: 'My Favorites',\n  },\n  {\n    id: 'watchlist',\n    listId: 'watchlist',\n    listRef: 'watchList',\n    content: 'Watchlist',\n    caption: 'I Wanted to Watch These',\n  },\n  {\n    id: 'seenlist',\n    listId: 'seenlist',\n    listRef: 'seenList',\n    content: 'Seen',\n    caption: 'I Have Already Seen These',\n  },\n];\n"],"names":["DashContainer","styled","DashBox","p","theme","colors","default","primary","shadows","elevated","UserBox","UserCaption","UserImg","UserList","UserItem","UserBtnSet","UserBtn","secondaryDark","ordinary","accentLight","NavMenu","NavStyledLink","NavLink","primaryLight","primaryDark","navigate","useNavigate","isFirstRender","useRef","useEffect","current","dashMenuSource","id","listId","content","to","isUserAuth","useSelector","selectUser","dispatch","useDispatch","userId","fetchUserLists","src","magot","alt","width","Suspense","fallback","Loader","listRef","caption"],"sourceRoot":""}