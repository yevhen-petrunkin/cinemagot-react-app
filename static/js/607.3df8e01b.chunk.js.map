{"version":3,"file":"static/js/607.3df8e01b.chunk.js","mappings":"kQAEaA,EAAOC,EAAAA,GAAAA,KAAH,kGCAJC,EAASD,EAAAA,GAAAA,GAAH,gDAINE,EAASF,EAAAA,GAAAA,GAAH,4C,SCQnB,MAXA,YAAkC,IAATG,EAAQ,EAARA,KACfC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAEhB,OACE,UAACJ,EAAD,YACE,UAACC,EAAD,sBAAiBE,MACjB,uBAAIC,MAGT,E,mBC+BD,MAjCA,WACE,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAIIE,EAAAA,EAAAA,GAAS,CAAC,UAAWF,IAAU,kBACjCG,EAAAA,EAAAA,IAAiBH,GAASI,MAAK,SAAAP,GAAI,OAAIQ,EAAAA,EAAAA,IAAiBR,EAAKS,QAA1B,GADF,IAH3BC,EADR,EACEV,KACAW,EAFF,EAEEA,UACAC,EAHF,EAGEA,QAKF,OAAID,GACK,SAACE,EAAA,EAAD,IAGLD,GACK,SAACE,EAAA,EAAD,KAIP,SAAClB,EAAD,UACGc,EAAQK,OACPL,EAAQM,KAAI,SAAAC,GACV,IAAQC,EAAOD,EAAPC,GACR,OAAO,SAAC,EAAD,CAAwBlB,KAAMiB,GAAVC,EAC5B,KAED,SAACJ,EAAA,EAAD,KAIP,EAIDK,EAAAA,UAA0B,CACxBnB,KAAMoB,IAAAA,MAAgB,CACpBF,GAAIE,IAAAA,OAAAA,WACJnB,OAAQmB,IAAAA,OAAAA,WACRlB,QAASkB,IAAAA,OAAAA,aACRC,W,2SCzCL,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQF,CAED,SAASG,IACP,OAAOV,CACR,CAHDA,EAAKR,WAAaQ,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASX,EACTY,QAAStB,EACTuB,YAAavB,EACbwB,WAAYd,EACZe,KAAMzB,EACN0B,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAepB,UAAYoB,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["pages/Reviews/Reviews.styled.jsx","components/ReviewDetails/ReviewDetails.styled.jsx","components/ReviewDetails/ReviewDetails.jsx","pages/Reviews/Reviews.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.span`\n  margin: 0;\n  padding: 5px 0;\n  font-size: 18px;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  margin-bottom: 40px;\n`;\n\nexport const Author = styled.h5`\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Review, Author } from './ReviewDetails.styled';\n\nfunction ReviewDetails({ data }) {\n  const { author, content } = data;\n\n  return (\n    <Review>\n      <Author>Author: {author}</Author>\n      <p>{content}</p>\n    </Review>\n  );\n}\n\nexport default ReviewDetails;\n\nReviewDetails.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport PropTypes from 'prop-types';\nimport { fetchReviewsById } from 'services';\nimport { normalizeReviews } from 'services';\nimport { List } from './Reviews.styled';\nimport ReviewDetails from 'components/ReviewDetails';\nimport NotFoundMessage from 'components/NotFoundMessage';\nimport LoaderComp from 'components/Loader';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n\n  const {\n    data: reviews,\n    isLoading,\n    isError,\n  } = useQuery(['reviews', movieId], () =>\n    fetchReviewsById(movieId).then(data => normalizeReviews(data.results))\n  );\n\n  if (isLoading) {\n    return <LoaderComp />;\n  }\n\n  if (isError) {\n    return <NotFoundMessage />;\n  }\n\n  return (\n    <List>\n      {reviews.length ? (\n        reviews.map(review => {\n          const { id } = review;\n          return <ReviewDetails key={id} data={review} />;\n        })\n      ) : (\n        <NotFoundMessage />\n      )}\n    </List>\n  );\n}\n\nexport default Reviews;\n\nReviewDetails.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["List","styled","Review","Author","data","author","content","movieId","useParams","useQuery","fetchReviewsById","then","normalizeReviews","results","reviews","isLoading","isError","Loader","NotFoundMessage","length","map","review","id","ReviewDetails","PropTypes","isRequired","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}